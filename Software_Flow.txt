课程介绍与目标
1.介绍课程内容和目标，主要讲解代码分析和程序流程图。
2.介绍实时操作系统的作用，与普通操作系统区别。


1.程序流程图开始于系统时钟和FreeRTOS实时系统内核配置。
2.外设配置和硬件引脚初始化也在初始化阶段进行。
3.实时系统创建五个任务，每个任务有自己的执行优先级和周期。

主要任务介绍
1.主要任务是传感器采样任务，优先级最高，执行周期为5毫秒。
2.任务包括获取MPU6050数据（陀螺仪数据和加速度数据）。
3.数据转换和处理，去除杂波，得到理想数据。
4.姿态解算，转换为欧拉角度（俯仰角和偏航角）。

编码器数据读取
1.读取飞轮电机的转速数据，通过PID控制器进行控制。
2.PID控制器使用角速度、角度和编码器转速数据进行控制。
3.保持小车平衡。

陀螺仪校准
1.陀螺仪校准，保存校准数据到flash。
2.重新上电时读取校准数据。
3.校准目的是减少传感器的零偏值，提高数据准确性。


各位小伙伴大家好，这里是远动力科技，欢迎大家进入学习，然后本次讲解的话啊，接着上面是程序流程图的讲解。那上一次的话，我们主要把。这一个啊，优先级最高的一个任务啊，进行了讲解，然后哎小小就接着上一次讲其他的一些任务，然后我们先讲这个第二个。bluetooth啊，transfer task包括这个第八个transfer task，这两个类目的话啊，大家可以看一下，
都是比较类似的。啊bluetooth也就是蓝牙的一个，通信的一个任务啊，这个的话是第八个，也就是调试任务。调试的话，它同样是采用串口通信的一个方式，与蓝牙通信是一致的，所以啊，我们是可以结合在一起场景。然后他这个任务执行的话，同样是需要等到他的一个执行时间到达一个周期，到了之后啊，需要啊x执行。啊，
如果说它时间到了，对吧？因为这一个蓝牙的话，和呃串口调试这两个任务，它都是使用串口串口的话，我们全部都是使用了dma。发送和接收的一个方式，它不需要呃，不需要通过CPU的一个干预。它只需要说有数据来了，我这边接收了，它会自动接收，然后发送啊，就会给它发送出去，根本啊不需要CPU的干预。
来讲一下它的一个任务流程。呃，然后空闲时的话，它会呃dma就会自动接收来自APP的一些蓝牙数据以及啊，这里是上位机下发的数据，对吧？它都会在。啊dma空闲的时候吸收它会产生空闲的中断，他们有数据来了，然后发送的话再往下啊，都是发送对吧？呃哦，还有一个没有相信你接收那数据之后肯定是要把这些数据啊，一个一个的数据包给它解析出来，对吧？
解析出来把你有用的数据给它存储好。然后紧接着进行使用就可以了，然后再往下啊，有上传数据和向上位去发送数据，这两个都是一啊一个类型，就一起讲发送的话，同样也是通过dma的方式进行发送。只是说啊，他并不是空闲的时候发送，他是我们主动啊去给他发指令啊啊，写这个一个操作，一个配置给他发送。往我往我们的dma内存里面，把内存里面的数据啊，往这个dma里面写入配置好，
它自己就可以发送出去了。这是它的一个流程。然后下一次有数据来了啊，就会自动接受这样一次循环，然后再看一下其他的两个任务啊，第一个的话是默认的一个任务，空闲任务。这个任务的话，主要执行的有我们的一些显示的一些相关操作，然后再往下看，就是数据量的一个读取。而是我们的模拟模拟电压量的一个读取以及以及它的数据转换。然后在实际使用上啊，硬件上是没有这部分的一个电路支持的啊，但是我们在软件上是有这个功能。
然后这其他的这几个一个优先级啊，都是比中间这个任务是更低的，包括它执行的一个频率，一个周期也是看时间更长的。比如说我们这个空闲人物LED的显示a dc的数据，读取我们并不需要啊，有多快的一个啊，速速度去读它，或者是点亮一个LED对吧？我们这是在一个周期就是一百一百毫秒，或者是更长的一个时间去操作，它都是可以的，因为它并不会影响到我们的主要的一个任务执行，因为我们主要的一个任务。是要保证车体本身的一个平衡状态。
然后来看一下这边的一个任务，这边的任务同样也是一样，它和我们的空闲任务基本上都是大同小异的，它只是在这一个任务里面做一些零散的一些任务哈。影响的一些功能，这里主要做了一些通过LED的，一些显示显示我们的一些姿态角度角速度，包括我们电机。呃，编码数值的一些速度数据进行显示啊，其他的一些数据显示的话，大家也可以去s开发一下。嗯，讲到这里，基本上把我们五个任务啊，
全部都过了一遍啊，这是它的一个程序流程图。啊，程序流程看起来啊，是没有多复杂的，但是代码的一个实现啊，是比较多的。然后程序流程的一个分析啊，整体框架就是这样，大家在看代看代码之前一定要理解好它整个的一个代码的一个框架，包括它每一个任务的一个功能是怎样去执行的？在大脑里面一定要有一个整体的思路，这样的话去理解代码啊，是很快的，能够入手理解到。
然后本小讲的话就先讲到这里，谢谢大家。

主函数代码分析框架
1.主函数是程序执行的入口点，首先需要理清其框架。
2.平安自行车工程代码使用STM32CubeMX软件生成底层配置和外设驱动代码。

初始化部分
1.初始化包括外设初始化、flash接口、时钟DWT配置。
2.flash缓冲区、MIC终端向量表、TKT时钟配置。
3.系统复位和备注。

系统时钟配置
1.采用外部时钟HSE作为系统时钟源。
2.PLL时钟源为外部高速时钟的九倍频。
3.ADC1、HBD2等时钟来源经过PLL后得到系统时钟。

外设配置初始化
1.GPIO配置：设置LED为低电平输出。
2.I2C、USART等外设的初始化。
3.DMA初始化：包括通道1到通道7。
4.ADC初始化：配置接口、扫描模式、数据对齐方式。
5.开启ADC功能：通过ADC_StartDMA函数。
重点

窗口初始化
1.窗口初始化通过STM32CubeMX软件进行，用于配置底层外设和参数。
2.配置内容包括串口端口、波特率、字长、停止位、校验位、硬件流控和接收模式等。
3.生成的代码包括底层外设驱动，通过软件图形化配置生成。

串口初始化
1.开启串口空闲中断，用于在空闲时产生中断，触发DMA传输数据到内存。
2.配置DMA传输的方向和长度，以及传输的数据量。
3.串口一和串口二的初始化完全相同，只是使用的串口句柄不同。

iPhone CE初始化
1.iPhone CE通过硬件配置方式，但在软件上未使用，因此被屏蔽。
2.使用软件iPhone CE模拟硬件控制，因此硬件iPhone CE部分不需要过多讲解。

定时器初始化
1.定时器3初始化为PWM输出，配置预分频系数、计数模式和技术协议模式。
2.定时器2初始化为编码器功能，配置通道、周期、分屏时钟和滤波模式。
3.定时器1初始化为PWM输出，配置通道、预分频系数和脉冲宽度调制模式。

各位小伙伴，大家好，欢迎来到员工世纪，然后这一讲的话同样是接着上一讲啊，针对我们代码里面函数的一个讲解。那上面讲的话，讲解到这三个电视剧的一些功能。然后往下看这个的话，是针对自己以上面的三个电视机里面的pwm的三个通道。进行啊，启动的一个功能。啊start对吧？这是启动，然后这两个是启动time 3的定时器三呃通道一和通道二，那这个的话是启。其中第17人。
电子器一的通道一啊，这三个函数啊，是需要我们后面执行。自行编写的自行调用调用它的一个库函数，然后再往下看这一个soft iPhone ced的，也就是我们软件模拟iPhone c的输出啊。这个初始化的话，不要简单就是配置mpo六零五零两个iioq，这两个i oq的话。啊，都是配置的是od啊，output od也就是开路输出，然后速度是海高。比如说高速路，然后。
邻角的话是PB的一个邻角，然后它的具体的邻角是可以定位在我们的a点h里面来看一下，具体的话scm邻角是我们的。六号零叫也就是pv 6，然后s da是我们的pv 7对吧？然后返回来。然后这两个是对我们两个棱角的思维高点平的一个操作。然后再往下看这个的话，是mp二六零为初始化的一些配置。嗯，这个配置的话是需要通过我们IOC接口对它一些配置。然后配置的话，我们先不讲内部的一些函数构造，我们就讲一下它表面的一些功能。然后先对啊，
我们的这个进行延时，延时了之后可以让它睡眠，这个功能的话是我们睡眠的一个功能。睡眠的功能，然后睡眠之后，然后延时一个100毫秒，再加上唤醒这个延迟的时间啊，一定要稍微长一点，如果说不去延时有可能。啊，初始化不会通过，或者是读数学的时候，我已经。所以在这里大家要注意一下啊，一定要有延时的。
然后这里的配置啊，都是针对我们abm po六零五零，它芯片内部啊的一些配置啊，首先给它唤醒，唤醒了之后。这里配置它的一个采样率。然后去配置它的m pu的内部接通微波。它内部低通滤波，它包括ACC，也就是加速度滤波，然后同样也有也有陀螺仪gyro的一个滤波。然后再往下看gyro，也就是陀螺仪的配置，这里的配置主要是去配置它的一个呃买量产的一个范围，也就是最大量产是多少？
啊，最下面是配置，我们加速度的最大量才。配置它为正负8g呃陀螺仪，为正负2000度的材料，然后这个里面的这些配置，大家包括这里面的一个唤醒。和使他睡眠的一个配置都需要去看m pu六零五零啊，它的一个寄存器手册啊。它这一个寄存器也就是这个孔径，它对应到的地址是多少对吧？大家都需要去看手册，然后配置的它的地址。相对应的，一个数据的值，
这个值代表是什么含义？或者是其他的值代表又是什么含义？这个大家都需要去啊。针对手册一个一个的去核对，去查看。大家如果需要修改的话，也是需要看手册的，然后再往下看。嗯，然后这个的话就是针对我们LED的一些配置，那我们先点进来，这个式子的话就比较多了。我们先讲就单纯的讲这一个函数的一个功能。函数功能的话呃，它是对我们LED单元，
因为在这个。嗯，自行车平衡小平衡，自行车上面我们采用到了的是一个LED灯，也就是。这一个stm 3l系统板上的霹雳13音调，它是自带的。然后这里的配置，我们是使用到了一些结构体啊，具体的一些结构体，我在这里先不给大家讲解，后面的话会详细讲解，我只给大家讲一下这个函数的一个功能。函数的功能的话，它入口啊，
这个的话是配置的，我们买个LED，也就是选择LED。然后这一个p2的围就是我们周期呃LED闪烁的一个周期。然后这一个啊，闪烁的一个占空比它其实是和我们的pwm的一个控制嗯是。类似的啊，有它的一个周期，然后占比这个占比占比的话，主要是设置它量和列的一个啊，时间长度。然后第三个的话是配置我们的。啊，闪烁的一个次数啊，这里这里还有一个注释的闪烁的数次数，
如果是零的话，它就无限闪烁。比如说我们的周期域设为100呃，占空比设置为50，也就是嗯五一百次，里面有50次是。啊量由50摄氏度，然后这个求个零，它就会无限次的一个循环循环，也就是量变量变无限的一个循环下去，如果车速为100。他就是啊，只会量变100次。然后再往下看。然后这有一个y的一个循环，
这个y的话，主要是检测我们的m pu六零五零是否出始化成功。是否在位的一个检测？如果说这个时候我们没有插mp六零五零，或者是这个模块有损坏，然后它就会在这里无限循环，就不会去往下面的一些操作。然后如果说mq六点五零故障了之后，它就会什么呀？报故障灯，这个灯就会有无限的一个闪烁。啊，同样会串口上啊，打印这个啊故障。然后再往下看一下啊，
这个的话是获取我们滤波器的一个参数低通的一个系数。啊，具体内部的话呢，这个就不再详细，大家可以去看一下，它是有一个公式的，具体的公式大家可以去搜一下lr滤波器。它是一个低通滤波器，然后这里的话是嗯，获取它的一个滤波系数的一个参数。啊，这里是一个周期对吧？咱低通滤波的一个频率25赫兹。然后下面的话啊，就在下节课啊，
再给大家讲解两节课就先讲到这里，谢谢大家。

各位小伙伴，大家好，欢迎来到原动力科技进行学习，然后本次的话啊是。接着上一次对我们的代码主函数啊的一个流程进行讲解，那上一次讲解的话是讲解到了这一个。lir滤波器的一个电动系数的一个获取这个函数。然后接着向下看，那这个函数的话，我们是啊，读取我们的校准数据，校准数据的话，主要是对陀螺仪零片数据的一个校准。如果说我们在嗯，没有校准的话，它读出来就是为零，
或者是他根本不会去读，如果我们有校准了之后。嗯，它会有一个零片数据传在我们的flash里面，然后就通过这个函数啊，大家在开机的时候它会输出啊，去读一次。然后读取的时候，它是从我们存到的那一个flash的地址里面啊，把这三个数据读出来。因为陀螺仪的话，它有三个轴，所以说啊，读取出来的时候也是三个轴的一个数据。然后读出来的数据，
这里同样也是打印出来的一个理念值。然后将读出来的数据赋给我们。啊，这下面是赋值给我们需要，后面需要用到的一个啊，变量也就是读出来之后我们啊，赋值到这一个变量，然后这一个变量。会在后面就就是在每一次读取这一个陀螺仪啊，原始数据的时候就会把这个零片值给减去。比如说啊，我们理论上来说，这个陀螺仪删除的一个数据都会在零值的一个附近啊，它有零偏的时候，有可能它就是随机的一个数据，
它可能嗯，也让它保持不动的时候。x轴可能是五，然后y轴可能是10z轴，可能是负20啊，都是一个随机的数，但是你在保持不动的时候，它就是默认值是一个零片。然后在每次读数据的时候，就会把这个里面给减去，减去了之后，然后再来保持平衡时。嗯，它的一个静止时的一个影片也就为零了，也就是静止的一个数据，
它就是在零值附近。在名字附近的时候，我们就说明把这个片子给去掉了。然后如果说啊，我们没有正常的一个读写，就给它写为零。就把这个啊陀螺仪零偏值给它写为零，如果说我们去啊校准了之后再给它读出来啊，读取成功了之后我们就把读取出来的零偏值。啊，这一个就是我们读取出来的一个里面值就给它写入到啊，赋值到我们这一个变量，然后在后期使用就可以了。然后这一个的话，往下看，
这两个都是针对我们oaed的一个使用，然后第一个display unit也就是oaed的初始化oaed初始化的时候。嗯，同样是啊，使用的我们模拟FC模拟FC啊，它的l口啊已经是在前面。gpo这里配置里面有进行初始化，大家可以看一下d ssc ndssda对吧？都是有初始化的。它和我们的s呃，和我们的m pu六零五的研发方c的初始化都是一样的，我们研发方c。然后再往下看它初始化的时候啊，在这后面它都有对我们的二维一体屏幕进行配置，这些配置的话，
大家如果说需要去了解，就需要去查看它的一些计算机手册。那在这里，我们就不再去讲解。然后啊，这个是可以啊，也就是清鼻音。然后再往下回到我们的。pi dee里头，也就是我们的PID图书啊，好，我们进入到里面看一下。进入到里面看一下，然后PID it，然后这里面又调用了一个PID初始化，
然后这里的PID初始化，我们总共使用到了。三个环，然后角度环，然后速度环角速度环。角度图盘的话，也就是我们的反反馈的一个参考值，也就是我们的一个角度横滚角，或者是PT角。具体的一个角度，大家可以去看我们的代码ctrl里面的。然后它这个参数啊，比如说我们去初始化这个啊，如果安卓这个角度的一个还的PID值的时候。我们就定位到啊，
这一个。呃，参数的话啊，就在这上面，因为我们去定位，进来的时候啊才对，在这里对吧？那这里的话，它的标号不同的标号，它对应着不同的一个系数。总共有三个环，这是我们的角度环的一个系数，然后这是速度环的一个PID系数值。然后这是我们的角速度啊，这些系数值总共有三个方案，
它是通过我们这里的标号啊，去调用我们这里面的每一列的一个系数值啊，参数值。然后通过这里的零一二，然后去调用我们这里面的啊，去三个。啊，分别是哪一个控制器对吧？零的话啊，就是我们的第一个控制器，第一个控制器里面的三个啊，五个系数啊，这是PID嗯，这是我们的。嗯，
几分的线符，然后这是输出的PID的一个线符。那同比这这两个PID公式也是一样，大家在里面针对性的看一下就可以了。然后再往下看，这是啊model的一个主电机，也就是非人电机的一个死亡横角。所以你就就直接给大家写啊，输出高电平就可以了。然后再往下看，这是我们的辅助电机的时代，辅助电机也就是我们的n二零电机前进后退。它在一个死人也同样是啊，给它输出一个高原原因。那再往下看啊，
就回到我们的freer to s系统的初始化，这个系统的初始化，我们就不再进行多讲，因为它是。啊，通过stm三二QQ max这个软件生成的啊，它是初始化。系统的一些对象。大家如果一定要详细去参考的话，就可以去看一下，那这里面说实话，主要是针对我们的一些任务，然后它的一个队列进行创建。啊，队列的话，
这里是创建了两个队列，但是我们实际上没有使用，因为为了呃，让我们整个代码的一个工程给它更加简洁，然后可读性更好，就没有去使用。规律只是说这里我们有一个创建的一个过程，那再往下看，它总共有六个任务，六个任务，六个线程。那那个线程的话啊，这个是没有使用到的，那其实是使用到了上面的一个，那具体的一个任务线程内部的一些功能函数我们会。
然后会在下一个阶段啊，进行给大家详细的一个讲解，然后本章节的话，主要是接着面函数里面的一些一些没有讲完的接着讲。然后再往下看啊，就开启我们的一个任务调度，然后接下来就是我们的外循环外循环，这里是没有任何的一个东嗯东西了，没有任何的代码。因为我们在这里使用到的，我们的氟利昂。属于rtos这个实时系统，所以它在调度的时候啊，它会自己。通过它系统来调动我们这里面的五个线程，
在五个线程之间去来回调度，根据它的一个优先级以及它的执行时间去调度的。然后主函数里面啊，所有的一个函数框架就给大家讲完了。然后后面的话就会针对其他的一个内容进行讲解呃，本章节的话就先讲到这里，谢谢大家。



各位小伙伴，大家好，欢迎来到云动力课题进行学习，今天我们讲一下嗯，这一款。偏自行车的源代码的嗯线程，每一个线程的一个框架讲解，那首先定位到我们的美函数主函数里面。主函数的话啊，可以从主函数这里进入到我们的嗯任务的创建，也就是free rg OS。然后int啊，这个初始汉书里面有我们的任务，创建任务创建里面的话。实际上，我们创建了有六个任务，
但是最后一个是没有实际使用的啊，就是controller task，这个任务是没有使用的啊，可以先不讲。然后这上面的两名，两个是我们的队列啊，只是在这里作为了创建使用啊，没有实际的一个使用。这个大家可以不去看，如果大家啊想要自己去使用队列，或者是啊，学习一下啊，大家可以去创建啊，然后再使用一下。然后啊，
这里是五个任务，五个线程。我们从上往下挨着挨着讲它线程的话啊，它的优先级，包括它这些名字啊，它的一个啊啊占的一个空间。都是可以通过我们的stm 3 lq跟max这个软件去配置的。然后进入到这个函数里面来。呃，这个函数呃，这个任务的话啊。它每一个任务都是一个死循环哈，这里面只是说它这个fr to xs的这个实时系统，它会在系统内部呢进行任务时间的一个切换调度。然后大家看一下这个任务，
这个任务啊，首先这里有一个初始化，这个初始化的话是对我们LED的一个配置，初始化配置。然后再看啊，这个lele d之前啊，它这里只是初始化的，然后初始化的一个参数周期是100，然后50的话就是。啊，一百的一半啊，也就是一半开一半闭五十次啊，关五十次闭也就是二分之一的一个亮灭状态啊，就彼此交替，然后它的一个时间的话啊，
我们再看这下面这个任务。它是十毫秒执行时间隔十毫秒的一个任务，然后在这里大家可以看到它是和这上面对应的，那这里面是执行。LED的次数啊，包括它的一个心跳的一个减少啊啊，在这里不再详细的讲解，因为我们在这里讲的是它的一个任务的框架。如果啊，这个LED这些任务的话，我们会在后面专专门针对我们LED啊应用函数里面去讲。所以说啊，在这个函数执行一次，它就是十毫秒执行一次，它里面会有一个计数器，
计数器的话啊，就是我们的hat。它的值对吧？它会不断的一个递增。也就是十毫秒递增一次，然后递增到我们100次的话，它就会需要一秒钟十×100，也就是啊，1000毫秒。然后50次的话，它就是500毫秒。嗯，它是什么意思呢？也就是它的总周期是一秒，然后1000毫秒嘛，
然后它的一个量裂的一个状态量500毫秒，然后列保持500毫秒的一个周期状态。所以这是它一个循环的一个状态，然后再往下看。这个的话是我们的ABC采集任务啊，它是采集我们的ABC的原始数据啊，这一个是存储的原始数据。然后这下面的话是将a dc的原始数据去转化为我们对应的啊，电源电压的一个电压值。然后我们stf三二单片机的话，它的a dc的一个位数精度，它是12位的，所以它会处理这一个四零九六二的12次方就是四零九六。然后他的一个参考电影啊。是三点三伏，
所以我们可以通过我们读到的a dc值乘以参考电压除以我们的。a dc的一个精度最大，值十点九六，然后再乘以11这个11的话啊，无论是乘以乘以乘以几哈这一个数字，就是代表我们在实际定。电路中电压电阻的分压的一个比例。如果说啊，我们这个电压分压的话是十k与十k，那就直接乘以二乘以二就可以了，因为它对我们的电源电压进行了二分之一的一个降压。如果它是不相等于不相等的两个电阻进行串联啊，这个时候啊，我们就算一下它的比例是多少啊，然后从而可以计算到我们的电源电压。
啊，这个任务的话是比较简单的啊，就执行了这么多，一个这么多，这么两个一个功能，首先l1的一个。嗯。相相当于是他的一个心跳的一个变量的计数，然后第二个就是a dc的数据采集，然后a dc的话，实际上我们也是没有用到的。然后啊。本任务的话，也就是这一个默认的任务啊task，这一个就讲完了，
然后本章节的话也先讲这一个任务，我们每章的话就讲这么一个任务。啊，保持这个视频的话，它的时间啊，不要太过长，免得大家听起来可能就啊，比较容易啊。啊，就相当于是睡觉嘛，比较容易瞌睡，然后本次的话就先讲到这里啊，谢谢大家。

各位小伙伴大家好，这里是云动力科技，欢迎大家在这里学习，然后今天我们进入到我们的第二个县城。然后从这里开始进入啊cr to sun it，这是我们的线程创建啊的一个任务。现在创建的话，第二个线程的话是我们的这一个神者simple task啊，这个任务这个的话是我们的。啊，整个平衡嗯，自行车里面的最主要的任务也就是优先级最高的，它完成的一个功能是我们的姿态平衡。姿态平衡的话啊，它里面还包括了有我们的姿态获取，然后包括嗯编码器测速的一个获取。
然后还有就是我们的姿态结算啊，然后我们的PID控制器啊，包括我们最终的啊陀螺仪的校准。都是在这一个线程里面进行的，然后我们从最开始的啊，这个函数开始讲解。这个函数的话啊，首先从ACC ACC的话，是我们的加速度，加速度数是来源于mq六零五零的啊一个部分。这个函数是获取我们的加速度原始数据，然后这后面也是有注释的，然后点进来看一下。啊，这个函数的功能就是读取原始数据的一个功能，
然后将它存储在啊，这结构体里面这三个。最后面的三个结构体，然后再将它赋值于啊，前面的三个变量，它这变量有什么不同呢？这前面的三个变量。啊，是我们的flow的型。这里强势转换了，然后后面的是我们的原始数据，原始数据也是整形的一个变量，那变量的话，大家也可以定位在这里。还是啊。
short型对吧s in short也就是我们的int型。然后返回来。然后再往下看，这时候读取我们的mpo六零五零的陀螺仪原始数据，然后再走进来看一下。这一个就是原始数据获取的一个共能函数，将它存储在这一个结构体里面，这个结构体包括了三者的xy轴。xyz然后再将它复制给其他的一个值，然后这里有一个值对吧？然后再复制到下面来。下面的话啊，这是什么意思啊？你看这里也是有记录的，也是有注释的，
将对原始数据原始数据是这三个变量。是存储的原始数据减去我们的明天校准数据。因为校准数据嗯，如果说没有校准，然后他的值就默认为零，然后读到的前面的存储的一个数据就是我们的原始数据。如果说有个零片，就把我们的零片给减去，每次都减去我们的零片，也就是进行了校准，然后这下面的话就是我们的一个滤波处理。这个滤波的话，我们就不再讲了，因为滤波的话，只是把它的一些啊跳变比较大的一些数据啊，
作为一个滤波处理。迪通微博哈，然后大家要去看微博的一个。原理的话啊，大家可以去搜索一下，这是使用的巴特沃斯滤波区，巴特沃斯啊，给大家把它拼写一下，巴特沃斯啊，就这个。这四个字滤波器对吧？就这几个字，大家如果有兴趣的话，可以去搜索一下，看它的一个原理是怎么样的？
其他的滤波器都是可以使用啊，包括那些其他的一键灵通，二阶灵通都是可以用的。只是看大家在这里啊，用哪一个比较好一点，可以对比测试一下，然后再返回。那再往下看，这两个啊函数的功能就是将我们的原始数据转化为以度为度。每秒为单位的一个数据以及以弧度，每秒为单位的数据。然后进来看一下，然后它这里转化的一个啊，公式是乘以了我们的一个变量，这是输入的数据嘛，
然后这边是输出的，输出的就是我们最终的以度为每秒的一个数据。然后它的转化的一个乘以的一个系数，这个系数的话，大家需要去查看我们的，我们po六零五零的一个手册。因为它的这个系数是根据我们的呃，如果说是角速度转化啊，就需要根据我们的角速度配置的一个量程。的产业去选择我们的一个系数，因为每个量产对应的系数是不一样的。然后加速度也是一样，它每个量程对应的我们的系数都是不一样的，所以这个大家可以去看一下我们的m pu六零五零的。计算器使用手册。
这两个都是一样，一个类型，然后再往下看啊，这也是和我们第一个一样获取原始数据。然后再往下看，这里同样是一个低通滤波，这个低通滤波的话，只是针对我们的嗯加速度加速度进行irl低通滤波。那这是我们最开始初始化时的一个滤波系数，就在主函数里面获取的一个。滤波系数啊，就是在这里。然后再返回回来。那再往下看，这是我们的姿态解算。
功能就是把我们所需要的姿态角呃，恒温角，天恒角，包括我们的复原角全部通知通过这一个函数给它计算出来。然后他解算的一个具体的内部的一个代码啊，在后面的章节也会给大家详细讲解啊。然后然后偏航角是通过几分出来的啊，它实际上姿态结算出来的只有啊，若和p7角。也就是我们的开关角和俯仰角，然后再往下看，这是姿态解算的一些姿态啊，旋转矩阵之间的一些更新。然后再往下看，这是读取我们的编码器，
这个编码器的话是在电机的嗯，尾部它是车辆，它的一个转速。然后可以大概先进来看一下。然后这一个啊，没有实际使用，我们就可以先不看测转速的话，是用到这一个读取它的编码值。这个编码值的话，是通过stm三二啊，它的一个内部的一个函数，因为stm三二它是内部自带我们的正交编码的一个功能，它可以去。啊，读取解算我们的AB项目编码器的值，
通过这个函数直接读取它的定时器的值，也就是通过定时定时器的一个增加编码的功能。然后读了之后马上又给它设置为零，因为不设置的话，它就会一直往上的一个计数，它相当于是。啊，算去它的一个赚取的一个圈数值脉冲值，然后归零的话，也就是说在单位时间内啊，我们获取到了它的一个值。相当于就是速度，只是说它的单位时间是我们的一个五毫秒的周期啊，就是这里，所以从而就得到我们的速度值。
那再往下看，这是我们的控制器，两个函数啊，先进入到第一个第一个的话啊，我们是。在平衡小自行车这个系统上采用了的有三环控制啊，这是我们的三环pad控制，最外环的话是速度。速度偏离空气，然后中间环的话是角度安角度控制这个速度的话是我们的编码器的速度。然后注意这一块的话，是陀螺仪的角速度偏离控制啊，这是三个环。然后具体的话，每一个环节啊，
然后这里也有函数，然后在后面的章节也会讲解到的。然后再回到之前的那这里的话是控制器输出。控制器输出的话。嗯，我看一下哈啊，先给大家大概讲一下。输出的话，正常输出是在啊，是在这个地方，也就是正常平衡的时候。输出首先要给我们的电机使能，这个电极的话是a二零电电机，如果说不死人的话啊，它就没办法进行前进，
和和后退，但是它是不妨碍我们的一个平衡的。这一个是我们的最终PID输出的一个赋值出来的，就这赋到这个变量，那这一个变量的话哦，实际上是在这里用到了，对吧？这一个啊，变量先进入看一下，它是设置我们的pwm值，通过这一个c的compare。也就是设置它的一个pwm值数值，然后通道一通道二两个通道。然后这一个函数是将它的一个数值，这两个数值输入进来的值进行了限幅限制到零到2000的一个范围。
输出了之后，然后他电机就会进行控制传动，这是最终的一个装备输出，然后再看一下其他的，如果说啊，这是检测导向。倒下的话，它是啊，大于我们的正负20度，倾角大于正负20度就会倒下。然后检测了导向，它就会使两个电机值啊，停止转动，负值为零，然后同时把我们的控制器呢啊，
这三路的PID，它的积分向七零零，如果说不七零零的话。他就会一直去积分啊，没有积分项的话，那就还好有积分项的话，那他就会长期的积分，你这个时候再给他立起来去平衡。那他肯定啊，他输出的量是非常大的，他完全是拼不了的。那这里啊，把我们的动力电机前进和后退的这个in二零电机也是disable啊，关掉了。嗯，
这里有一个复位调试，也就是它倒下来之后必须啊重启复位，或者是啊开关机进行重新启动。它才能保持平衡。然后这两个函数的话，是我们的左右转向和。前后控制的一个啊功能。然后再返回到啊，刚刚的一个流程，然后再往下看，这一个是我们的脱离影片校准，然后先来看一下。如果陀螺仪零偏校准的话啊，它这个也是比较简单，我们主要是采集陀螺仪的静止时的数据，
然后在这里呢，是采集了我们的总共采集了五次。然后求取它的一个平均值，平均值的话是存储到这里面来的，这三个变量xyz这三个变量。然后最终通过我们的flash写入操作，把这三个变量写入到我们的flash啊内存里面，然后内存的地址是这一个。大家都可以去看这个地址是多少？然后写入了之后，然后再马上给它读出来。这个时候读出来之后再进行复制操作，复制操作是在这里。将我们读出来的值就这三个啊，这里面的值。
复制到这个。offset offset的话就是刚刚上一讲哦，应该是刚刚不是上一讲就是本讲啊，所讲到的一个存储它的一个零片值。全部到底啊，给它复制到这里之后，然后我们就会在刚刚这个函数返回出来一下。就可以。这里不是每次都会减去我们的零点四吗啊，然后他最终就会到这里，每次就会把这个零点四给减去，这个时候就校准成功了。然后。那这个框架就全部讲完了，这是我们的最主要的一个嗯线程。
神蛇神魔帕斯科。然后啊，本次的话就先讲到这里，谢谢大家。


各位小伙伴大家好，这里是圆通力科技，欢迎大家来到这里学习，然后这一讲的话是讲我们的线程第三部分。的一个框架讲解，首先进入到线程的话，还是通过我们的main函数里面啊，创建我们的。vr to se这一个函数进行进来。然后上面讲的话是讲解我们前两个上一讲是讲的我们的这一个啊。神蛇神报task这个任务，然后接下来我们讲这个任务，这个任务的话是我们的零散任务。然后点进来，这个任务最主要的一个功能就是进行显示啊OLED的显示功能，这个很简单，
这个任务显示的话啊，这是在。函数之外，循环之外的一个形式，这里只执行一次，然后这是我们的字符的形式。因为在字符后面会显示我们的动态的一些数据啊，我们的角度角速度，然后我们的。呃，飞轮车的这一个编码转速。然后再往后的话，会有一个a dc的一个电压值，这个电压值大家可以在后期去拓展，因为实际上没有一点作用，
因为硬件上没有进行连接。然后这个任务的话呢，就这么简单，就是一个单纯的omd显示，然后显示的一个周期是40毫秒，一个周期这个OS delay啊，延迟的。啊，频率是啊，建一毫秒的一个参数频率。40就是42秒，然后再返回到我们的这个任务里面来，再讲解后面两个任务，这两个任务的话，线程都是我们的通信。
然后第一个通信的话是嗯debug transfer task是我们的debug调试的一个串口，通信的调试的串口通信任务是和上位机进行串口通信的。那下面这一个的话是bluetooth transfer task，这是我们的蓝牙通信的一个线程。这两个线程完全是一个类型啊，包括它的结构都是一样，只是说你解析它的一些啊，数据出来，它的指令，它的协议是不一样的。然后我们先进入到这一个啊，第八个这一个函数，然后for循环里面有一个，比如说马特，这是我们的数据接收。
然后再往下有三个内容，也就是我们的发送，发送的话是发送到我们的上位机，那么上位机的话啊，我这边啊给大家。打开看一下。那三位机就是我们的命名，命名三位机。在这个三国演义上面啊，可以显示嗯。啊，拖拽过来可以显示我们的姿态角度，这里有我们的一些数学，若横观角PHP嗯，非常小u。
偏阳角，然后包括其他的一些状态数据，你接收这些，这里面的一些数据，然后传感器数据都可以去显示，包括我们的电压。对吧，都可以显示，只要你想给他啊，传送传上来，传到上面去上，你都能够把这些数据啊，以数据化的一个形式在这里进行打印出来。只是说你要根据他的一个协议进行传输。如果说大家在使用这个上位机不太明白的地方，
它每个页页面都有帮助提示，右下角都有帮助，包括你切换到其他的一个波形显示。同样有帮助提示你不懂，那你就可以去嗯，打开它的这个帮助提示你就能够把它啊看懂，包括你也可以去网上搜索一些，包括这个升级的一些设置啊等等啊，都是可以的。这里有端口号，选择波特，波特率选，选择包括啊，这里它有它的一个通信协议，下面这些实例代码对吧？
都有这一个上位机其实。它的功能嗯，还是比较全的，有波形显示，数据显示包括它的一个三维图姿态，三维都有的。那接着我们的代码来讲，首先让我们看到这个receive data接收数据，这里面来接收的话是通过dma的一个方式。嗯，空闲接收空闲中断来产生进行接收，然后。数据的一个发送肯定是从上位机来的，对吧？因为因为在这个小车上是属于接收的一个功能。
话术呢，就是小车啊，就是商业街，商业街的话，我们主要用到的就是这个。投入移交准备这个功能。因为你点击了这个地方，点击一下，它就会向我们的啊，下位机也就是我们的单片机发送指令。然后发送到指令之后，在下位机单位机上，它就会产生空行动，断dnd MA就会直接把数据搬到我们的内存存储起来。然后我们在这里进行解析就可以了，
然后dm中dma中断是在我们的这一个这一个文件里面。it也就是interrupt的中断语言来，然后往下翻。这时候串口一串口一就是第二个，这一个串口，然后产生的空闲中断就会读到我们的。已经接收的数据包数个数。然后这个时候你把数据接收了之后就死人啊，就死人disable就就不再让他接收了。嗯，然后就把这一个标志位置位，然后置完位就就在那重新接收。重新开启。然后开启我们的空间中啊，清除我们的空间中的标志，
然后清除了之后，下次就会重新进来啊，就是这样的一个流程，然后接着的话，它会把我们的数据。啊，通过dma的方式给它存储在这里，这一个缓冲区里面来receive八个，然后它是又是二点一的一个缓冲区。然后我们再返回到刚刚的那个函数啊，这里面，然后接收到之后。会在啊，刚刚已经应该还没有跳转到这里面来。然后再往刚刚的这个啊，
对，是这里面来，然后就是save data，我们点进去看一下啊，它是分析的。啊，分析的话，首先我们获取到这个接收到的一个终端标志，这个标志它不是终端标志送的人工手动去测试的。通过代码去设置，然后再把啊我们存储到的这个数据缓冲八个，再给它解析出来，这里面就是。进行解析对吧？具体解析的啊，
这些详细的一个指令啊，你怎么去解析存储的这个需要去结合？啊，刚刚的这一个里面的三位置协议。消费协议以及通信协议去对应一对一的去看，因为它每个指令都有它的一个指令帧的功能码。大家可以去啊，挨着合作一下。然后解析出来了之后就把我们的缓冲给了七零，全部复制为零，方便下一次重新存储，包括这些标志啊，我们的长度啊，都给了七零。这就是啊，
我们的一次接收完成了。然后再往下看，我们发送发送的话，它有很多内容需要发送，这里发送我们的状态对吧？状态的话，实际它是发送到内动状态。雷公放在这一栏里面来。这个RP hu这三个数值。大家也可以进来看，然后这里有我们的若p7若对吧，然后最终给它发送出来，具体的啊，这里面的一个协议，大家需要去看一下它的。
啊，这里面。这一个里面的通信协议以及下位机啊，实际代码可以去参考你去你们可以去参考啊，这个代码究竟是不是这样写的都可以？只是说大家想上嗯，上一期的版本的话，我目前这边一直是使用的v四点四三四，如果说其他的版本它可能有的通信协议不太一样哈。建议大家也是用这一个版本。因为它发送的话啊，有很多条可以去发送，有我们的state就是状态，包括我们的深色传感器的数据。就是找速度这些。
然后我们的iic data，这里的数据就是在飞空状态，这收集就是按icd at a这里面来显示的，是传感器数据这一栏来显示的。所以说呃，淘宝淘宝就是我们的电压和电流。显示的，然后user user的话是在我们的数据模型里面，这里大家可以去选择它的user data，这也是通道集啊，对吧？都可以去选择。这里有曲线，有颜色选择，然后有数据的一个通道选择。
然后再往下的话啊，这里是我们的数据调准进行的一个嗯，协议的发送以以以及。向上一级进行成功校准之后的一个反馈，这里反馈校准成功以及反馈啊，这下面是失败对吧？你如果没有校准成功就反馈一个失败。比如说我们这里啊，根本没有连他的一个啊，调试的一个窗口，然后点一下啊，根本没有反应，因为没有连通嘛。如果说联通了之后，你协议不对啊，
那他就会返回一个失败。然后哦，协议不论基本上啊，可能还不会执行到这里来，因为可能因为你解析都没有解析出来，所以根本不会啊。向上返回数据。所以说他在这里就会啊，循环往上发送数据，这是我们的发送。然后这里的一个发送指令，包括接收都是十毫秒任务周期执行一次。然后再往下看，就是我们的蓝牙蓝牙接收的话也是同理，需要把我们的蓝牙数据解析出来，
这是我们的获取到的蓝牙数据，然后这一个版本rc。有一些八分是我们的创客二，同样是在这个终端里面进行接收的啊，尤尤沙特二创客二进行接收。它接收的一个啊，几个函数都是一样的，只是不同的是串口一改为了串口二，对吧？然后再回到啊蓝牙这里，蓝牙的解析嗯，大家就需要看一下它的一个啊协议。解析的话啊，就是在这里面来解析的，它的协议，
比如说你这个井号啊，或者是逗号啊啊等等，它都是有协议的，那这个协议的话。总体的一个格式是这样的啊，星号那井号开头，星号结尾。然后大概给大家讲一下这个协议哈，然后这一行的话是接触到我们的模式，模式选择嗯，这个变量的话是。我们的open close啊，打开和关闭的一个按钮的一个数据。然后再往下，这两个是遥感的xy轴的数据，
遥感的话，它可以控制小车的一个前后。一直左右转向吧。然后这里还有一个嗯教累加教练数据，也就是我们的有一个教练教练位。校研会的话啊，大家在核对这个教研会之后没有问题，对吧？判断了之后没有问题再去解析它的有效数据。啊，到这里就解析完成。然后这里的上传数据上传，也就是像我们的蓝牙APP端手机端啊，发送数据可以在手机上进行它的一些数据显示，显示的数据的话，
还有我们的。三个角度，若p一起用，包括我们的三个角速度啊，我们总共是显示了六个数据，六个数据，它的一个方向上位机。呃，像我们的APP上传的一个格式哈啊，是这样的一个格式。也是以星井号开头，星号结尾，比如说它是这样的一个格式哈，它这样的话表示我们发送的，若这个数据rr就是我们的若缩写，
然后是发送的一位小数点e-f就是一位小数。它会将我们的这一个数据的一个变量啊，代替到这一个位置来，这一个百分号以及到f之后的这一个位置来，那其他的星号诶r。和井号r是不变的。井号r结尾那下一个数据啊，同样是在这里来。星号p开头，井号p结尾啊，每个数据都是这样。这时候上传到APP的一个数字数据，然后通过这个啊数函数给他发送数据。然后这个蓝牙分析啊，这个任务的话，
它是80毫秒执行一次，因为蓝牙的话。啊，我们目前也是默认将这个蓝牙模块，它的一个过渡率配置为幺幺五二零零，实际它的一个传输速度也是比较快的。默认的话是九六零零，只是我们给它配配置成了两幺五二零零，如果说大家。嗯的蓝牙没有配置，大家可以去配置一下，通过我们的窗口模块给它发指定配置，这个很简单。所以在这里嗯，蓝牙的一个发送数据，
它的一个频率就不是特别快，80毫秒。啊，基本上都是能够满足的。然后讲到这里，基本上把我们所有的嗯。所有的任务哈，全部的都讲了一次，所有的任务里面的一些框架流程全部讲完，然后本次的课程也到这里，谢谢大家。


各位小伙伴大家好，这里是远动力科技，欢迎大家来到这里学习，然后本章节的话是讲解我们的LED。啊，它的一些应用层面的一些函数。首先，我们定位在a函数啊，这个地方，然后从a函数里面。找到LED LED的话，也会从我们的啊，这个点c文件啊，直接进入。那总共里面有几个函数啊啊，这有一个啊啊，
这里有一个operation啊，还有一个set啊，总共有三个函数。然后先讲一下第一个函数，第一个函数的话啊ctrl啊，是选择我们的啊，一个哪一个指示灯的一个配置？啊，到这里啊，这上面是屏蔽了，因为我们在这一个啊stm 3幺的核心板上，它是有一个啊。啊LCD LED，所以这一个啊，下面这一个就屏蔽了，
如果说大家啊，有多个多颗LED灯的时候需要去拍摄。啊，再往下进行加就可以了。然后选择的话，是选择到了这个地方，然后进入到它是什么这个的话就是啊。将我们的。LED进行控制，这是选择的LED的是哪一个？然后这是给它的一个实例，控制它的一个量变。然后可以进来，对吧？亮面是通过我们的高低电离进行控制的re dp啊，
是写入电离。那高低电平的话，具体高电平保持量还是低电平保持它的一个量，这个需要去和和我们的硬件啊，进行结合，需要查看它的硬件原理图。然后再往下看啊，这是我们的LED operation操作的一个函数，这个功能的话，主要是对我们LED的。啊，里面的一些数数据啊，数值啊，进行计数以及它的一个r打开，或者是二五关闭的一个操作。
因为这里面的一个函数是在持续，是执行的。然后这下面这个是初始化用的，只执行一一次，然后这这个功能就是一直在我们的循环里面去执行。循环的话，大家我们先定位在嗯，这一个啊默认任务里面第一个任务看一下，然后ad state这个就是。啊去初始化我们的函数，初始化它的一个第一个啊LED灯的一个选择到底是点亮哪一个灯？然后它的一个操作系列，然后点亮的一个开段的一个时间点的一个频率给它分段，然后包括它闪烁的一个次数。然后在这里我们是LED operation进行操作的，
这个操作的话啊，大家可以进来看一下，然后呃，大家留意一下这个时间，它是十毫秒执行一次。然后这上面配置的是100的50对吧？然后这上面是零，然后点入进来这一个operation operation。这个的话，它是由我们的嗯赫特啊，也相当于是心跳吧啊，然后这也是我们的。啊啊，配置的一个周期，这个配置的话，
大家可以回归在这个初始化里面来。初始化，它会对我们的周期啊，复制到这一个结构体里面来，那对我们的啊。一个脉冲的，一个高低的，一个宽度，同样的也是复制到这一个这个里面来，包括这个它的一个循环次数。然后初始化的话，它是都为零这两个，然后最终会给它把这个结构体LED data。复制到我们的run LED这个这个题里面来。将这里面的所有的参数全都复制到这个结构体来。
然后大家再来定位看一下这个结构体，就是我们刚刚复制的一个参数，对吧？那他会对这个结构体里面的一些数据。啊，进行操作复制的一个数据就是我们上面的这些数据复制过来的。因为结构体是在这里，对吧？那么最终是赋值到run AD这个结构体来，所以最终是对我们这一个啊。数据的初始的一个操操作，那现在来看一下我们配置的是周期，周期在哪个地方？period对吧？这个是周期。
当大于这个周期的时候，他就请你重新开始计数。然后这个是我们的脉宽脉宽的话，当大于零小于这个脉宽的时候，我们就会按就是点m的AD。给它嗯，打开如果说它是在我们的外框之后，然后小于我们的周期，相当于是后半部分。然后就关闭我们的LED指示灯的一个操作。然后再往下看哈，这是到达啊，这个周期相当于是那一个100次的执行次数就执行完了，它又重新开始了。相当于前50次啊，
是打开后50次是关闭对吧？然后他是100次执行一次，是时候呢，100次就是一秒钟。一秒钟也就是500毫秒开500毫秒b，然后在这里有一个number number的话，如果说它是等于零。嗯，等于零的话，它就不会执行在这里，如果说它不等于零哈，不等于零的话，比如说它设置为number=10。使得话，当这一个count计数值，
它每次会累加累累，加到大于十的时候，大于等于十，它就会把这里清零，全把这个几个零全部清零。相当于是他啊，这些协调值啊，包括他的一个嗯，在外面赋值的啊，这个周期和脉宽全部都为零。啊，它就不会进行跳变了。这个number就是设置的呃，是它的一个跳变的一个呃次数。如果说它为零，
就不会是这个函数啊，这里面的啊，它就会无限循环。那这里面的啊LED的一些应用函数啊，到这里就讲完了啊，总共有三个函数，包括一些结构体之类的啊，这个给大家讲了之后也是比较好。理解啊。然后本章节的话就先讲这里，谢谢大家。


各位小伙伴大家好，这里是原动力科技，欢迎大家来到这里进行学习，然后本章节的话，我们主要是讲一下。iPhone c通信这一块的一些代码，包括它的啊，会结合它的时序来进行讲解。然后首先打开我们的偏自行车的啊，工程代码代码工程，然后定位到我们的main函数里面，然后从main函数里面进入到这个soft MC int。啊，这是我们的模拟iPhone c初始化的一个函数。初始化，它是比较简单，
因为iPhone c的话，它是两线通讯的一个啊，通信方式，还有我们的SCL时钟线。s da数据线，然后将两个啊线同时配为我们的od，也就是开路输出。然后最终给它拉高两倍的平，然后再往下看啊，我们在使用fnc通讯的话。啊，因为通iPhone c通讯的方式，它可以啊，去给重机啊，操作和发送数据也可以嗯，
主机在重机这边读取数据，它是一个双向的一个通信方式。所以我们在配置s da的一个顶角输入输出模式的时候，它有两种输出，如果我们要点重击从在这里。啊，重计的话是指我们的m pu六零五零这一个模块，主机就是我们的mcu stm 3幺单片机芯片。所以，在主机向重机发送指令或者是数据，要对重机进行操作的时候，这个时候就需要将我们的数据线啊s da配置为输出。如果主机要从我们的从机里面读出数据的话，就要将s da配置为输入。然后我们再讲iPhone c通讯的话啊，
这一块的一些啊，信号包括起始信号，停止信号，还有下面的a码信号。然后发送数据，然后接收数据对吧？这些嗯代码的话，他会根据我们的。持续来进行啊，编写同时我们讲的话也是根据时序图去啊，一对一的进行讲，这样大家理解起来是更方便了。首先我们打开我们的百度搜索iPhone c通信协议，对吧？我们根据它的一个实据图。
来进行代码的一个查看，这样的话，大家理解起来啊，能够更懂一点。MC同学们的话，他总共有两个时钟线，那这两根线的话啊，都是要上拿的。然后它七点的话，可以接很多的一个冲击，七点一七点二都是并联在我们的时钟线和数据线上，只是每一个冲击的话，它有不同的地址可以去控制它。然后再往下看看一下我们的起始信号和结束信号，起始信号就是当SCL为高电平的时候s da线由高到低的翘边。
被定义为起始信号，我们看一下它这个啊，持续是不是这个样子？首先SCL v。高电平的时候也就是这里，对吧？前半部分为高电平，然后s da线由高到低s da，也就是数据线由高电平。变为低电平的一个过程啊，就产生了一个起始信号，然后同理结束信号。就是啊，当我们的啊，我们先不讲结束信号，
我们先。啊按和代码进行一对一的一个讲解，我们参考一下代码，看看是不是这个样子，代码的话，首先始终高亮屏数据，数据线为高亮屏，两个都为高亮屏，对吧？都是这前端都为高亮屏。然后这个时候s da肯定要变为低了s da拉低是吧？由高到低的一个过程就会产生一个起始信号，这是没有问题的。完全符合我们的时序图，然后第二个再来看它的结束信号，
结束条件当SCL为高亮平的时候。s da线上由低到高的跳变被定义为停停止条件，然后再看一下时序图是不是这个样子。SCL为高电平。这一段回高电平对吧？然后s da由低到高的一个跳变过程，就产生一个终止信号。没有问题，然后再来查看我们的代码。停止信号，最开始两个都为d是吧？始终为低数据为低，然后再将我们的时钟线拉高，时钟线拉高，时钟线拉高了之后，
紧接着会把我们的数据线支高。这个时候就会产生终止信号，对吧？数据线拉高完全符合我们的时序图。然后再来看应答信号，应答信号的话就是在嗯每一字节数据发送完之后会发送一个应答啊，每当主机向重机发送来一个自己的数据出去。主机总是需要等待重机给出的一个引导信号，也就是主机，主机这边给重机发发送完了数据。因为主机这边发了数据，不知道到底有没有发成功，所以这个时候主机可以给我们主机一个应答，表明我们向从机发数据发完了。对吧，
以确定重机是否成功，收到数据，然后重机的应答。重击应答主机所需要的始终仍然是由主机提供的，应答的时候啊，始终是由我们的mcu提供的，然后应答出现在。每一次组局主机完成八个数据位传输之后，紧跟着的时钟周期，也就是在第九个时钟周期。因为传输，它会一个字节八位数据嘛。八位数据的话，它有八个时钟。所以紧跟着时钟测，
就是在第九个时钟周期，然后低电平零表示应应答，一表示非应答。然后嗯。结合我们的代码来看一下哈。并拔。首先，两时钟线为低，数据线为高。最开始，这里时钟为低，数据为高，对吧？数据线一直为高。然后因为应答的话是从是主机mcu从从机这边获取数据，
所以我们需要将我们的s da配主机输入。然后SCL啊，由低拉高就是第九个时钟线产生。然后后面的话就紧跟着要去读取这一个s da的一个电离s da，唯一就非应了啊，唯一s da如果唯一就进入到这里，唯一返回零返回零的话就接收异常，失败就是非应了，对吧？如果说啊，接触到低电平低电平啊，它就会应答低电平应答就返回，你就在下面来了，就不会执行这里面。所以这也是结合时序能够讲得通的，
完全匹配的，我们这一个视序图。然后本讲的话就先暂时讲解这三个数序，然后在下一章的话会接着啊，本章的进行讲解。谢谢大家观看啊。


I2C通信时序图解析
1.I2C通信时序图包括起始信号、停止信号、应答信号、数据发送和接收等部分。
2.起始信号：当SCL为低电平时，SDA从高电平变为低电平，表示起始信号。
3.停止信号：当SCL为低电平时，SDA从低电平变为高电平，表示停止信号。
4.应答信号：在数据发送或接收过程中，接收方通过SDA线发送应答信号，表示数据已正确接收。
00:18
数据发送时序图
1.数据发送在时钟线SCL为低电平时开始，SDA线准备数据。
2.数据一位一位发送，每位数据在SCL时钟线的上升沿和下降沿之间传输。
3.发送过程包括准备数据、发送数据和时钟线拉高拉低等步骤。
4.发送完8位数据后，释放SDA线，并拉低SCL线，表示一位数据发送完成。
01:05
I2C数据发送代码解析
1.I2C数据发送函数包括初始化、设置时钟线、准备数据、发送数据和释放SDA线等步骤。
2.函数通过循环八次，依次发送8位数据，每位数据在SCL时钟线的上升沿和下降沿之间传输。
3.发送过程中，根据数据的最高位决定SDA线的电平状态，然后依次发送低位数据。
4.发送完8位数据后，释放SDA线，并拉低SCL线，表示一位数据发送完成。
03:37
数据接收时序图
1.数据接收在时钟线SCL为低电平时开始，SDA线作为输入，接收重机传感器的数据。
2.接收过程包括初始化、设置时钟线、读取数据和移位等步骤。
3.接收8位数据，每位数据在SCL时钟线的上升沿和下降沿之间传输。
4.接收过程中，根据数据的电平状态，将其累加到data变量中，并依次移位。
05:15
I2C数据接收代码解析
1.I2C数据接收函数包括初始化、设置时钟线、读取数据和移位等步骤。
2.函数通过循环八次，依次接收8位数据，每位数据在SCL时钟线的上升沿和下降沿之间传输。
3.接收过程中，根据数据的电平状态，将其累加到data变量中，并依次移位。
4.接收完8位数据后，返回接收到的data值


各位小伙伴大家好，这里是圆农业科技，欢迎大家来到这里进行学习，然后本章节的话是嗯，在前面两。两章的一个基础上进行讲解，前面两章的话讲解了我们的IOC通讯的嗯，每一个的嗯，时序有起始信号有。停止信号，有我们的数据发送，有发送八个字节，然后有应答信号，然后有我们的数据接收，也是接收八个字节。这是我们的一个写流程里面的啊，
每一个单的一个步骤，然后我们这一讲的话是主要讲一整个流程，整套下来是怎样的一个操作？啊，首先定位在我们的函数里面，代码里面就是iPhone c读取一个字节，对吧？这个读取字节的话是从我们的重计上面读取。并不是单独的这一个图操作。啊，并不是单独的这一个写操作，它这个是写是由主机向从机写写入的一个整个流程，所以我们来看一下第一步。开始信号对吧，然后第二步发送我们重接的地址，
因为你向重接写数据或者是写指令的时候。啊，你要向哪一个地方去？写哪一个传感器？也就是说需要知道我们的重机地址，然后知道了重机地址之后，然后你要确定我们把这一个传感器的哪一个寄存器？啊，去操作去写东西，然后要发送我们的一个啊，寄存器的地址对吧？然后再往下看啊，有两个地址了之后就需要将我们的啊data啊写入进去，就需要再向重机发送一个自己的数据。对吧，
总共是发送了有三个数据，然后最后发一个起始信号，这是我们写一个字节像，重新写出一个字节的啊，整个流程。然后再往下看嗯，写写的话啊，这里还少了一个操作啊，这实际上啊，重计的一个地址会加零的，一个操作也就是最后最后一位是啊零。我们再先根据这一个啊，之前看到的这一篇论论文啊，这篇文章来看一下它是怎样说的？然后在起始信号后必须传输一个从机的地址啊，
七位，然后第八位是数据的一个传输方向。零表示，主机发送数据也就是主机向传感器统计写操作，也就是t表示发送，然后一的话，最后一位啊，第八位为一表示我们主机mcu需要去读取。统计了一些数据。所以在我们代码中体现啊，就是体现到我们的成绩地址啊，最后一位加零或者是加一的一个操作。然后我们再看一下啊，这一个流程。这个流程就是向从积。
写入数据，因为这一位是零对吧？零就是代表写入零，要表示主机发送数据，第一步ss就代表我们的。啊start起始信号这有些，然后重机地址对吧？重机地址，然后重机地址后面的最后一位第八位啊为零零的话就表示。啊，写数据的一个操作，然后AA表示给予引导信号。因为这里发送了一个字节，对吧？然后发送成功了，
然后重新给一个100的信号，然后第二步就发送我们的啊数寄存器的一个地址发送完了之后再给一个再给一个信号回来。然后紧接着就会发送我们的啊数据以及指令，然后最后给一个啊。应答信号，然后最终有一个stop停止信号，表示我们的这一啊，这一条写写的一个操作啊，已经完成了。对吧，然后再来看一下读读操作的话嗯，我们先看一下它的一个结构读，首先第一个77号，然后紧接着发送我们的成绩地址。然后在最后一位第八位的时候就写一第八位啊，
一就表示需要接受数据了。对吧，其他都一样，就是这一个不一样，然后接着的话，我们看一下，首先起始的信号是大致，然后发送重启的地址，因为在这里啊，仍然是先从先。嗯，先我们mcc u先向主机写操作，发送指令，表明我们要。嗯，
给这个统计嗯，告告诉他一下，我们要从他这里读取数据，所以前面需要给他写操作，写操作的话同样会写入我们的地址。然后啊，这一个传感器的地址，然后再写传感器是某一个哪一个寄存器要对它进行操作读。然后这里写了之后，然后再来进行读操作的一个写啊，重新开始start开始信号，然后这里的话，我们就需要读了。读的话，末尾最后一位为一，
然后我们最开始在上两上一讲啊，讲的这一个read byte读一个字节。然后读出来的数据就是存到这个data里面data里面，最后返回数据，然后读了一个字节之后啊数据，然后这里给一个一秒信号，然后最终停止信号。对吧，完全是按照我们的这一个啊流程走的，这里是读取一个字节的一个。啊，是从我们的传感器读取一个字节的一个操作流程，如果说大家要读取多个字节，这个时候又需要去循环读取就可以了，然后这下面我们有一个读取两个字节。
有一个高位和低位啊，两个字节，然后再组合起来，但是这个的话，我们实际上是没有用的啊，因为我们更多的啊，是不止读取两个字节啊，一次性基本上可能要读三个。或者是以上的一个知识点，这个的话，我们会在m pu六零五零这一章再给大家进行讲解，然后本章的话就先讲到这里，它啊，本章讲的话主要就是讲了一个。发送的一个整个流程，
然后包括写啊的一个整啊写和发送都是一样，然后包括读的一个整个流程，但是他读和写都是写一个字节，只是说它的流程是一个完整的流程。然后本章的话就先讲到这里，谢谢大家。

各位小伙伴大家好，这里是远东科技，欢迎大家来到这里进行学习，然后本章节的话，我们是主要是。主要是对我们代码里面的mpo六零五零这一块的啊，代码进行解读，然后首先定位到我们代码当中的。m pu六零五零点c这个啊头文件。啊，这个点c文件，然后定位在我们的edt啊，初始化函数啊，初始化的话啊mpo六零五零，它是通过iPhone c通讯的方式。由我们的mcu主机对我们的重庆m pu六零五零去啊，
写相应的相关的数据，他写的话是。是对我们嗯统计m pu六零五零传感器里面的计算器进行操作啊，去配置，比如说要配置我们的。一些量产陀螺仪加速度的量产，包括它的一些低通率波。然后采样频率等等都会都可以去通过啊，它的寄存器去配置。然后。去配置m pu六零五零这个传感器的时候，我们是需要根据啊，它的一个操作计算器的手册啊，一对一的去操作，因为每一个寄存器相对应的每一个数据位都表示不同的一个含义。
那这里我们打开啊f12进入到里面去看一下，然后这是我们的啊，比较常用的计算器已经列入出来了。然后大家在啊，我们这边在解读代码的时候也会啊，和我们的计算机手册进行相结合的一个教程讲解，然后再打开我们的m pu六零五零的计算机手册，然后首先讲一下啊。这个函数这个函数的话啊，是我们的iPhone c写数据写一个字节啊，像我们的m pu六零五零进行写操作，而主机就是我们的mcu。啊，单片机统计就是m pu六零v，然后第一个入口参数代表的是啊，
计算器的地址，第二个是我们要写入的数据。然后看一下这个地址是代表了什么零叉6b，我们在我们的计算机手册里面来找一下零叉6b。零叉6b我们主要是要看这个计算器的x值，也就是16进制。零差6b，这是幺八幺b，然后再往下看一下。这是三七。然后四二六五六七六九六a下一个应该就是6b了，对吧？6b6b的话就是我们的。啊，电源管理仪计算器，
然后它每一位啊都会在这里有标明，包括它的一个每一位的选择配置。啊，像第一位的话b的七最高位，它是device reset，这个下面应该也是有配相关的，每一位的说明这些参数。该位之一重启内部计算器到默认值对吧？然后复位完成后，该位自动清零。包括其他的也是有相应的一些配置，然后我们看一下我们这一位是配置的多少？零叉八零八零的一个含义啊，它就是最高位为一，其它的每一位都为零。
那其他的每一位都为零的话，嗯，我们看一下啊，最高位为一是什么意思？最高位为一就重启内部计算器到默认值，对吧？啊，其他类大家就可以不用管，因为这是成绩。然后因为这下面还有对它进行配置为零的话，这下面配置为零为零就是啊啊，相当于就已经唤醒它了，就没有重启复位。就是直接已经开始唤醒它了。清零了，
那其他的为零，比如说我们这个clock啊select这个是始终的选择为零，就选择是内部发射的一个时钟。其他的大家大家可以去看一下，比如说sleep啊，这个sleep改为自一进入睡眠啊，如果说啊，改为自己就正常的一个工作模式。然后再往下看，我们的这个寄存器，这个寄存器的话，零叉幺九。品叉幺九我们重新往上翻。这是三三b了啊，还往上弹这三八啊三幺二四。
幺f幺c幺b幺a。幺九幺九就是我们的采样频率分频器。然后我们配置的是多少配置的为零，配置的为零，然后这后面我们有备注它的采用频率就是用的1000赫兹。去除以啊，这下面这个采样分比的一个值再加一，然后这一个采样分比的话，它也是有。等于我们的陀螺仪输出频率除以一加采用分频的一个啊数值，我们看一下它是不是这样算的，采样频率等于。等于陀螺仪输出频率。除以一加这个分平的值，我们看一下。
然后当我们的这这里还有一个哈。啊，这是我们的dlpl，也就是低通滤波器，如果是说没有使能也是disable啊，就输出频率等于8k，如果说啊，有使能的。它的输出频率就等于等于1k，我们在配置这个采用频率之前就必须先去知道我们这一个DLP f。它的一个配置值，我们看一下。它这一个是在哪个地方配置啊？应该是在我们的这一个。计算器config config的话啊是啊，
零叉幺a这是幺九幺a应该就是下一个零叉幺a，我们配置的是多少？我们返回来看一下。零叉幺a配置的话是零零叉零三零叉零三。零差零三零的话，也就是前面四位高四位全部为零三的话，也就是这一位。如果它为一，它就不止为三了三的话，也就是这一位为一，因为它是三是一个单数，肯定贝塔零它肯定为一。然后beta 1也是唯一，这两个唯一的话就加起来就为三了，对吧？
因为这个beta 2为一，它至少就是4 beta 3为一就是八了，所以一+2就等于三。我们再看一下啊，这下面的一个配置配置为三三的话，我们这一个采用频率。91了，对吧？fs为一，然后它的一个。嗯。低通滤波的一个带宽，这是ACC加速度加速度滤波的话，它是44赫兹的一个带宽。然后带宽如果说滤波的一个频率，
它这里越低，它的延时程度也就越大，所以我们选择了一个居中的一个值。就是v3延迟啊，也是几毫秒能够接受的，然后陀螺仪的话，它这里的带宽是滤通滤波42赫兹。高于42赫兹以上的一些啊，数据都会被滤掉，然后采用频率fs为一，然后我们返返回来看一下啊，这里同样是备注的。44的42对吧？完全对得上，然后我们再返回上去看一下我们的采样，
这里采样频率。为我们唯一唯一了，对吧？陀螺仪输出频率啊，就等于我啊，采用频率啊，就等于我们的陀螺仪输出频率，刚刚陀螺仪输出频率就为1000赫兹。然后再除以一加这个div的一个啊，采用分平值，然后这个分平值我们配置的是多少？配置的是零。零的话啊。看一下零零的话，一+0就等于等于零对吧？
1000÷1还是1000，所以它的采样频率就为1000赫兹。然后后面两个配置的话，然后这一讲就先不讲，没讲的话就先讲到这里啊，好谢谢大家。

各位小伙伴大家好，这里是远动力科技，欢迎大家来到这里进行学习，然后本章节的话啊，仍然是接着上一讲进行啊解读。然后上一次的话讲解到了m pu六零五零初始化配置的啊，这一个m pu这一个计算器的配置。然后我们剩下两个就是强烈的进行讲解。然后我们接着看一下啊，这一个gyro configure，我们从名字上可以来看的话，它是我们的陀螺仪配置计算器。然后他的地址是零差ED，然后打开我们的计算器手册。零差EA，然后零差eb啊陀螺仪的配置对吧？
然后它配置的话是配置的多少？零叉ub，然后陀螺仪的量程是正负2000度每秒的一个满量程。我们看一下是不是配置的这么多零差一哦零差一八对吧？零差一八。嗯，差一八一八的话，也就是说贝塔四这一位为一啊八的话，也就是贝塔三为一这两个都为一对吧？而为一的话啊，说明它就是配置的为三，因为这是两位嘛，两个位，这一位为一就是一，这一位为一的话，
它是为二一+2就等于三，这两位的话，它是单独算的。所以为三的话，然后满量乘的啊，就是正负正负2000度每秒，对吧？然后具体的这些文字，大家可以再去自己自己下来再看，然后这里的话，我们主要给大家讲一下它的一个主要的啊，一个内容配置上的。然后再往下看，我们的ACC。嗯，
加速度的配置，加速度的配置的话，它的计算器是零叉ec。ec的话啊，这是eb，再往下来看ec就是我们的加速度计配置对吧？那配置的多少零叉幺零一零的话，这里有注射啊，是正负8g的一个量程，正负8g往下看一下。零差一零零差一零一零的话，一同样也是x为一零，最后面的话全部为零，对吧？一零也就是配置为二。
为二的话就是我们的正负8g。正负8g，然后这上面诶也是没有问题的，对吧？然后关于我们的mpo六零五零的初始化配置啊，就全部讲完，然后接下来我们再来讲一下我们下面的每一个函数。这个函数的话是读取我们的m pu六零五零的ID值，读取它的一个ID同样也会涉及到。它的一个计算器地址，因为你去读的话就需要知道去读哪一个地址。然后需要读的一个数据，然后包括它的数据长度，然后存储的数据，我们是我们看一下，
先看一下这个函数，它的入口参数第一个。是我们的计算器地址，第二个的话是啊，存储数据的一个缓冲区的一个指针数据就存在这个地址里面。然后number就是要读取的一个数据量。number的话，如果说为一啊，这个就执行一次，如果说啊，为其他的值，它就会循环去读，对吧？然后这个计算器的地址就会指针。在这里的话，
他是读取了一个计算器的地址。啊，这个啊omi。也就是读取的啊，我是谁，它代表的话就是我是谁，也就是这个芯片，它的一个地址啊，读出来的数据是多少？能不能和和它的一个？啊，计算器本身的一个值去匹配这个地址值零差七五。七五的话，应该是在下方了，我们再往下看，
这是六九六b七二七四。七五七五对吧？y MI我是谁？然后啊，它的类型read only只只读，然后寄存器的默认值是零叉六八，如果说我们从这个零叉七五计算器读出来的值为零叉六八。零叉六八，它就是正常的一个值，对吧？如果说它不等于零叉六八这个模块，那它就连接啊，连接不正常，或者是啊，没有连接上。
这是我们检测这一个模块是否有正常的一个通讯。相当于是一个故障检测在初始化的时候去检测它，如果说啊，没有读出来就不会去执行下面的操作。然后我们再往下来看一下。嗯，为的ACC也就是读取我们的加速度数据，加速度数据的话，我们是这一个它的。计算器地址，然后点进去看一下啊，计算器地址的话，它总共ACC它有三个轴对吧？有xyz每个轴，它有两个寄存器，
但是嗯，大家看这个寄存器的地址可以发现它每个寄存器都是相紧邻的，都是挨着的这3d。3c，3d，3e，3f，四零对吧？所以我们在读取它的时候啊，都可以连续去读。然后它的高位啊，是3d啊，高位是小的一个地址，然后低位是在后。然后它的地址是16位啊，
它的数据的话是16位，所以我们啊读出来的数据要进行一个组合，高八位的话向左移。对吧，第八位，然后最终第八位的话啊，进行获得一个运算，加起来就是我们最终16位的一个数据，所以我们在这里读的时候就读了有六个计算器，六六个数据。六个字节，然后这里的长度为六，对吧？然后零和一配为我们的x轴的加速度数据，然后二三为我们的y轴加速度数据z的话啊，
就相当于就是我们的四五数据。然后再往下看，我们的陀螺仪也是同样的道理哈，大家可以去看一下啊，零叉四三往。四三三四五六七八对吧？全是挨着的，我们看一下手册啊，三四五六七八零三四三，这是七五了，再往下六五。四三，然后往下看四二。十十三对吧？这寄存器它都是写在一起的。
四三，然后是我们的x轴十五八到15位，也就是我们的高八位，然后四四，也就是我们的低八位。对吧，和我们的大脑完全一样。然后再往下看。啊，这是读取我们的原原始数据，这个就给大家讲，因为它也是调用我们这里面的一个函数哈，调用我们上面的函数。那这张我记得好像是在前面有进行讲解到，有在我们的啊任务框架里面有讲解到。
然后再往下看，这是我们阿托沃斯滤波器的啊，一个参数。啊，这个不进行讲解，大家有兴趣的话可以自己去搜索看一下它的一个运行啊，滤波的一个原理。然后这个函数的话，我们也是有讲解的哈，同样也是在我们的嗯线程的框架里面进行讲解。然后包括。嗯，我看一下这个啊，这是我们的获取ir滤波器的一个因素，因此因为我们在下面要进行ACC的滤波，
这个我记得也是在。啊，那一个任务框架里面有进行讲解了，大家可以反过去看一下，只是没有做过多的讲解啊，大家如果说对滤波器这一块有兴趣的话，可以去。啊，查阅资料啊，进行看一下我们这一块就不再进行讲解。那本章节的话。嗯，就先讲到这里啊，然后剩下的就下下一节再给大家进行讲解好，谢谢大家。

各位小伙伴，大家好，欢迎大家来到文明科技进行学习，然后本章节的话，我们还是接着m pu六零五零这一块。的代码进行解读上一讲的话，我们是讲解到了我们的滤波器这里，然后再往下看，这是我们嗯，这个函数的话是将我们的。原始加速度数据转为重力加速度计为单位的数据，然后转化这个数据的时候，我们需要有一个系数中间。然后这个系数的话，它的一个来源，包括这个陀螺仪原始数据转为我们的度每秒的一个单位数据，
它的来源是根据我们。去配置啊，这个mq六零五零的啊，量产来进行获得的啊，就这两个。我们目前配置的量产投了一个量产的话，是在正负2000度每秒，然后加速度的话，满量才是正负8g。然后我们来看一下手册，它的分辨率是怎么样的，然后这是我们的加速度值，然后在这下面它有一个分辨率。它的灵敏度，然后正负8g的话，
对应分辨率就是四零九六lsd每g对吧？我们看一下四零九六。四零九六的话，嗯ACC对应这个四零九六，然后四零九六分之一是多少？我们用计算器打开看一下。一除以四零点六。是不是这这么多零点零零二四四幺四零六二五对吧？完全一样，所以这一个系数的话就是我们。啊，所配置的一个哪量层所得到的啊，最终的一个灵敏度的值，这个需要去嗯，看手册一一匹配的。
然后我们再来往下看一下它的陀螺仪的时候，陀螺仪我们配置的是正负2000度每秒，所以它的灵敏度是十六点四。如果要转化为度每秒的为单位的话，它需要啊，一÷10。十六点四对吧？一÷16点四零点零六零九零点零六零九七五六。对吧，完全对，对得上这个数据。然后这是转为度，每每秒哈，然后这一个的话再转为弧度，每秒的单位的话就需要乘以我们的拍除以180度。
这个的呃，换算公式，大家应该是学过的弧度与度之间的一个转换，在数学上或者是物理上都有学过的。然后再回到我们的代码当中往下看。然后这是将我们的ACC原始原始加速度数据转为以g为单位重点加速度为单位的一个数据，就乘以我们的刚刚的一个系数。对吧？那再往下看弧度，这是弧度每秒哈，将我们的嗯度为每秒的数据转为弧度就需要。啊乘以这个是吧这？就刚刚讲的这一个，再乘以我们的弧度的一个转化的一个公式，它也除以180度。
然后再返回。这是将我们的原始加速度数据转为嗯，我们的以度每秒为单位的数据就乘以啊，它相对应的一个系数零点跟六零九七五六啊，这上面点点点。那再往下看嗯。这是我们的陀螺仪校，准在之前也有讲解过，在这里可以给大家再过一下，它输入输入的一个数据就是我们陀螺仪的原始数据。同类原始数据哈。然后它只是说它的值啊，转化为我们的flow的型号，然后将我们的原始数数据累计。那校准的时候，
我们有一个前提条件，就是说要把我们嗯，整个的一个装置平安自行车，这个装置禁止放置。啊，不要去有干扰它禁止放置的时候，它的数据可能才会稳定。然后稳定的话，我们再读它的离子的时候啊，才能读的准，如果说你在校准的时候，你去干扰它，或者是你放在放在这个桌面，它有震动的一个情况。它都是读准的，
你校准出来的数据，它也是有误差的，然后最终结算出来的一个角度啊，就偏差很大。然后在这里校准的话，它是获获取了五次的一个累加数据，然后在这里求取一个平均值，然后将这一个求取的零片平均值存储起来。分组小时候写入在我们的flash里面，而写入的一个地址是写在这个地方的，然后写入成功了之后。就马上给它读出来。读出来这个时候，我们就需要复制给啊，下面这里来了，
复制到这一个变量，这个变量的话是在每次读取我们的加速度数据。啊，我们的陀螺仪数据之后就会把这一个零片值给减去，每次读取都会去减去它这个零片值，它是有三个轴的xyz轴都会减去，减去了之后它的静止时候的一个状态就是。啊，几乎是在零值附近的一个值了就比较理想。如果没有去校准或者是校准失败啊，它就会给它赋为零，就相当于是没有校准嘛，所以每次减零就还是原始的一个啊，同一数据值。然后这里的一个内容啊，
就是一个校准，那再往下看，这是读取我们校准的一个值，然后这个函数的话是在初始化的时候有进行啊一次调用。其他的时候就不不会调用，因为初始化的时候啊，我们的降水值已经写入到flash里面，初始化的时候只需要读一次就可以了，不需要每次去读读一次出来。啊，相当于这个变量值就已经啊存到我们的啊，这一个这一个名片纸上，那每次的时候就给它减去就OK了。然后关于mpo六零五零啊，这一个姿态传感器的啊点c文件里面的函数就全部讲解完了。
然后谢谢大家的观看，这次的话就先讲到这里。

各位小伙伴大家好，本次我们进入到啊偏小车的姿态结算的一个讲解，讲解我们姿态结算代码之前，我们先看一些相关的一些理论。嗯，我这边在网上找了一些相关的一些资料。正在解算的话，我们在这里体验小车上采用的是四元素的计算方式，将四元素啊转为欧拉小的方式。然后这里网上找了有三篇的一个Word文档啊，给大家大概讲一下，第一个我们首先要知道啊什么是四元素。四元素的定义以及四元素与姿态角的之间的关系。然后这是四元素的一些相关的理念概念，然后我们再来看怎样进行姿态结算的一个流程第一步。首先，
进行重力的加速度。重力加速度的归归一化处理，因为重力加速度的话，我们。啊，小时上有六零五零模块，它可以测量。啊，车辆它的一个加速度的数据，然后第二步进行重力分量的一个提取，然后第三步求出姿态误差。然后误差的积分第五步再进行互补滤波，第六步解那个微分方程，第七步。啊四元素归一化，
除以第八步。啊四元素求欧拉角在这前面的话，我们是把。第六步啊，有微分方程的话，就是把我们的四元素求出来，求出来之后就把四元素转为我们所需要的欧拉角。然后理论的话啊，再往下看。啊，这里是代码，这个代码的话和我们。嗯，在小学上的代码是大同小异的。我们这里的代码就先不看什么是四元素，
这里四元素的讲解啊，具体讲解的内容是在惯性导航里面。警务人员的作者。大家可以详细在这里面看一下，我也不对这一篇进行啊介绍，因为这个是直接可以在四元素。啊，关心导航里面的书里面可以看得到的，然后这在多少多少页就起来了，所以大家可以看一下。那这有四元素的定义，对吧？实验收入是一个什么样的东西？然后四元素的表达方式啊，都写的有的，
所以大家可以啊，去网页网上搜索一下这本书来看一下。那这一个文档的话是讲的是四元素，我们再来看第二个。d啊，这是刚刚那一个。看一下啊。好，这是我们的第二篇。再往上第二篇讲的是四元素与姿态。之间的一些关系，同样这个也是在惯性导航这本书里面有讲解，然后页数已经也是标记在这里的，所以大家也是。在这个书里面去查看一下。
我们最终的话，只需要它的一个实际的结果啊，这过程的话，它的一个流程，大家如果说想要具体去探讨。啊，去琢磨的话就私下可以自己去看就可以了。我们在这里就没有进行具体的讲解。到这里啊，这个得出来的是元素。就是我们啊，所需要的一个数据，这个方框框起来的。这个在代码中有用到的啊，这个给大家先提取一下。
方框中都是有所用到的。然后这就是啊，四元素与欧拉角之间的一些关系。然后这是进行了一些数学运算xs in 3和tan这些啊，相互转化。方框这些呃，基本上都是比较重要的内容，大家可以在啊关心导航那本书里面去阅读一下。在这里啊，我们得出了四元素的一个矩阵，那四元素的矩阵，然后再有方向曲线矩阵的话，转为欧拉角。啊，就是这样的一个关系啊，
我们需要的欧拉角主要就是俯仰角t起横轨角落，然后还有横向角。长倾角的话，因为我们在六轴里面m pu六零五零的话解算出来的啊，是有一定的误差，所以我们在代码里面没有直接采取通通过四元素进行解算。是直接通过啊角速度进行积分的啊，得到的我们一个偏航角的一个角度。这是一个具体的代码，实现我们在这里也不再。最终是讲解。针对我们体验小生代嘛进行讲解。然后再来看我们的。第三篇文档。第三篇文档的话。
啊，就是四元素的微分，它是怎样把我们的四元素求出来的？这个也是在啊，惯性导航这本书里面有所讲解的。这里有公式啊，直接套路的公式，所以这些代码写出来的话都是根据一些相关的理论知识来的。是凭空在这里写的。大家如果说要去详细的了解它的一个推导过程啊，我建议大家可以把这本书去看一下。然后再往下看啊，这就是元素的微分，它的一个推导的一个流程。那最终最终的话啊，
就到这里，到了这里，这是一个最终的结果，也就是我们代码上所需要的一个流程。四元素的更新。然后我们再往下看。这一步就讲的惯性单元测量值的融合，也就是最终角度的融合。角度的融合的话，我们待会。是针对代码里面进行讲解的。这里就不再进行讲解。然后。我们可以看一下啊，它这里的流程。
就刚刚自他解散的一个流程。重力加速度的归一化处理第一步，第二步提取四元素等效余余弦矩阵里面的重力分量。然后第三步。就是我们差乘向量的一个差乘得到姿态的误差。然后最后面第四步对误差进行积分处理，第五步啊。啊，修正我们的一个积分处理，因为积分积分的话，它是有一个误差的姿态，误差补偿到我们的角速度上，修正角速度的积分漂移。啊，第七个是元素的归一化处理。
然后规划处理的时候，我们就直接套用那个最终方向四元素。就是那个余弦矩阵得出来的四个因素，转为我们的啊欧拉角就可以了。我看一下，这上面还没有什么可以讲的。啊，这三篇文章的话，我们同样也会啊。啊，放在我们的资料包里面，大家也可以去看一下，因为我在这上面也没有进行详细的讲解，我们就回到我们的代码当中来。代码当中的话，
这输入的啊，这就是我们的生态计算的一个函数，输入的参数有陀螺仪和加速度。的数据也就是六折的一个数据，但是这里的。啊，加速度。是我们以。啊，这个三轴的加速度g获得的一个数据，然后陀螺仪的话是我们以弧度每秒为单位的一个数据。然后我们可以在这里看一下。加速度的话是以g为单位的啊。这么一个单位，然后我们再看第一步，
首先进来把我们在集体坐标系下车的加速度。进行国际化处理。这里是求取三个轴，三个轴的平方之和，然后开根号，最终我们。分别乘以这个系数就是规律化处理啊。然后这是集体坐标系下加速度计测的重力分量。然后再往下看这个的话，就是我们。啊，地理坐标系的重力分量，地理坐标系的话，它是轴竖直向下，重力分量的话，
也就是一这里就写的是一。一就代表一个重力加速度，然后经过我们的这个方向余弦旋转矩阵，由参考坐标系旋转到我们的机体坐标系下。得到的集体坐标系下的重力分量，这就是由参考坐标系旋转到我们集体坐标下系的重力分量。这个啊，旋转矩阵的话是在这下面。也是通过四元素的方式，这个在啊，那个惯性导航这本书里面有所讲到，大家可以看一下详细是怎么过来的？然后这也是重力分量啊，然后这上面同样是机体啊，自身测得的一个啊，
重力分量，然后两者的一个差乘，最终就会形成一个误差。这里我们也有所讲解，大家在这里可以看一下。两者的一个差乘就会有一个误差，误差的话，我们对误差向量进行积分，积分的一个处理在后面，积分处理了之后，我们会把它。没补偿到我们的陀螺仪的一个积分上，这最下面这一句就是陀螺仪的积分，陀螺仪积分的话会得到一个角度，然后它的角速度。
进分子的角度，然后啊，我们通过。啊，上面的一个加速度的一个误差来进行对陀螺仪啊角速度这边的几分的一个修正。然后最终就是一个正确比较正常的一个数值，如果说他不修正的话，那陀螺仪积分的话，他会有一定的累计。累积的这个误差的话，它会越来越大，所以它的偏差也会越来越大，最终的角度啊，区分出来的也会越偏越远。所以我们就需要加速度这边啊，
对陀螺仪进行一个补偿处理。这句话啊，就是它的一个功能，然后再往下看，就是我们四元素的一个分析。啊，更新方法刚刚在文档里面已经看到过。异界，龙格库塔法更新四元素，四元素的更新啊，同样在我们的惯性导航里面的书籍有所讲解。然后再往下。啊，就是对我们四元素的一个啊。归一化处理，
同样的方式进行平方开根号啊，乘以这个系数就可以了。然后最终啊，就要求取我们的欧拉角了，欧拉角的求取是通过我们的四元素进行求取的。刚刚在那个文档里面有所讲过啊。啊，同样也是在惯性导航这本书里面可以查得到的啊，它是一个怎样的一个矩阵关系，通过这个矩阵关系，再把四元素转啊。转到我们的所需要的欧拉桥。然后p奇角和若角，我们是通过四元素来求解的，在这里我们偏航角的话是通过。
啊z轴的角速度几分的啊，得到的角速度啊，得到的我们啊z轴的一个角度的。然后下面的话都是关于啊旋转矩矩阵的一些内容，这个大家可以针对啊关心导航这本书里面去看一下。好，关于这啊，资产结算的话，我们的代码已经讲解到这里，好，谢谢大家。

各位小伙伴大家好，本次啊章节的话，我们是讲解PID的控制算法的理论知识。然后在讲理论知识之前，我先给大家举一个例子。啊，类似PID的这种啊，我们在去考小时候科目二考试的时候就考驾照的时候。啊，有一个坡道停点停车，不知道是不是每个人都有啊？我们这边当时考试的时候是有的啊，有一个坡道定点停车，这里的定点啊，因为我们都是人工去考啊。它有一个大概的定点范围，
无论是办理以内，只要定到办理以内的一个范围，我们就举个例子都算合格，这是我们人工确定点。如果说刚也有可能刚好定在那个位置，但是这种概率是比较小的，有可能是离啊，我们中间。半米以内我们就选取中间的一个位置，就25，25厘米的这个位置，这条线作为我们的目标。定点位置比较合格的一个位置。啊，如果我们人为的去开车进行定点的话，
很有可能是没有完全到达这个位置的，有可能是。啊，离这个点少了十厘米，或者是多了十厘米，或者是其他的数字都是有可能的，这是我们人为啊。还有一个闭环系统啊，能够测量这个误差的一个数据，然后再给你一个反馈，这是没有的。所以它是有一个误差的。如果说我们采用pidd盘系统去做这件事情的话啊。啊，我们就相当于是把这个误差我们可以直接看得到啊，
有一个测量仪一样能够测在啊。测出来直接显示在我们的仪表盘上，这样的话我们再去嗯，坡道地点停车的话就可以很稳定的把它停在一个。指定的位置，这就是有一个反馈系统，通过对我们误差的一个控制，进而达到啊。我们的一个目标的一个期望值。希望请到的一个位置。然后我们再回过来看我们的PID控制算法的一个。啊，这篇文章。首先看这个啊，一个图形，
这是一个控制的环节PID控制算法啊，总共有三个环节。p的话就是我们的比例调节环节I，也就是我们的积分环节。d的话就是微分，它三者代表不同的一个意义，然后p的话先p控制器的话是对我们误差。直接的一个控制，它是乘以一个固定的系数啊，得到一个直接的对误差的一个调节。然后I的话I的话就是对我们误差进行积分的运运算，比如我们前面140运算了之后有100个误差。将这100次误差累积到一起，然后乘以一个啊系数就是我们的积分运算。然后d的话d的话就是微分啊，
如果说我们是要对距离调节它的微分就是速度速度的话。啊，在我们执行机构里面看啊，因为我们实际上是对距离的调节，然后微分的话，它实际上是控制的一个调节速度。所以它可以控制我们在调试距离的一个过程中的一个快慢程度。响应的一个趋势，它可以提前预知我们这个小车向前或者是向后的一个快慢的趋势该怎么去调。就是这样的一个PID控制算法。然后在这里理论，我们就先讲这么多，就讲PID这三个环节代表的是什么意思，然后我这边是在。鼻端上面找了一个比较。
可以的，一个PID控制算法的一个讲解啊，很容易的能够啊，大家很容易的能够看懂它是带有一个图形化的一个讲解。这边拖过来，大家一起看一下。之前是没看见。有点跟踪的部分，我也用到。我相信很多人在初学PSP的时候都可以学到的。数学公式给吓跑了，坚决严厉，写的非常优秀。今天我们抛开所有的数学公式，用实例给大家测一两种偏力。
希望他也会学这个方向。那么，控制程序应该怎么写呢？大家都能想到的计算机这个全速前进，然后用100比除以机器人。得到机器人需要前进的时间，然后我们让机器人一直前进就好了。这种控制系统呢，叫做开放控制。open look，因为机器人的输出。这个是移动到的位置，并不会反映上来，影响机器人的速度。也就是我们给机器人下达的前提信号。
使用开放控制，对简单的任务或者是制度要求不高。是没有问题的，但是如果机器人在运作的过程中发生偏移或者前进的路面，是不可以看。用或者机器人的运用速度比你可以确定要慢一些点。那么，机器人可能容易。也达到我们预期的必然的一个位置，因此在这种情况下，我们更需要的是一个叫做闭环的控制系统。constitute。或者就叫做反馈回路。什么意思呢？也就是说这些人的收入，
也就是我们的机器人下达的权利。不再是一个恒定的收入，他会根据机器人的输出，比如机器人当前的位置来做。而天力是闭环控制的一种。也是应用最为广泛的一种。我们先来看一个另外的例子。在这个例子中。长期的控制无人机选择的高度。我们能够控制的是无人机螺旋桨的。速度旋转速度越快，昨天讲产生的升力就越大。在这个例子中，如果我们用之前讲到的开放控制。很难做到让无人机，
飞机到指定的高度。因为无人机会同时受到重力空气的扰动。以及助力的各种不确定因素。首先，我们假设我们的VC安装了传感器，能够感知当前飞行的高度，那我们就能够计算出当前高度。到目标高度的误差。也就是图中红色箭头表示这个。当时我们相处一下。有一些启动的升力，就是它这时候我们可以把升力和误差。它属于表示的一个限制关系。比如说vf=0点一乘以多少？如果我们用这个公式来，
可能就有一些飞行高度。我们可以看到这样的效果，没错，这个算法呢，就是PID中的计算法。这是普通系统的缩写，它表示的就是生理f和误差ever的比例关系，中间的这个常量。零点零一我们称之为kt kt越大升力和误差的比例就越大，控制系统的响应速度。但同时，我们看到维基在接近目标高度时。产生的震荡也越严重。那为了解决系统正常的问题。我可以通过PID证明自己擅长。
d是哪个单词写的双写？也就是导数微分，那微分在这里能够起到什么作用呢？因为我们之前选的这个误差ever。是距离公差，如果我们的距离求分得。回到了刚老师的速度，也就是说第三版的文字文件的速度做出响应。耽误人均速度过快时。计算法会抵消掉一部分由计算法计算出来的是率，从而减缓系统的震荡。如果你觉得这么说不是很直观。我们直接来看看下面这个例子，核电站反向类的参数叫做kd，我们接下来慢慢的从零开始。
它是增加配据参数。来看看我们的一些运动的情况，现在我们将kd设置成了零点零二，可以看到我们的这个正常现象已经改善了。当我们将kd增大到零点零五时，无论这个正常现象几乎被彻底消除了。但是切记，这里的所有参数都不能被数据扩大，我们需要找到一个平衡点，否则系统会产生过充的反向。有了p和d，现在只剩下一个I了。毕竟我相信大家已经看出了我们控制系统的问题，无论我们怎么去调整。KB和KB的值这个误差永远都不会被消除成零。
原因其实很好理解，我们知道小误差存在无人机的胜率也一定存在，但是在无人机接近于目标高度时，这个胜率会最终与重力平衡。呃，此时无人机就不会再继续上升了。为了解决这个问题呢，我们。要累积这个误差值，也就是说如果长时间误差都不要修正的话。我们就需要给刘一些提供更大的权利。迫使无人机上升，这就是PID中的I算法。I是一字母的缩写，也就是积分。
I会对误差进行累积，从而。提供更大的收益，加入pi以后呢，无人机会慢慢的朝着目标高度靠拢，自动枪也会被最终消除战略。但我们搞懂了现在这个工作原理之后，实现这个算法其实非常容易。我们来看看下面这段尾代码。首先，压力会使用到一个循环。循环会不会给这个用户差来调整？测试信号在第一步呢，我们会去计算用户家庭。也就是我们之前例子中用红色箭头表示的那个。
随后，我们去计算积分部分，最好带好后不齐的将当前误差。可以加起来并保持在循环外面的这个变量比。接下来是微分的部分。最后，我们将比例，积分以及微分部分加减求和全都是我们今天讲到的CP ki。和KB参数，然后算法等待替掉，再进入下次循环。暂时就只能刚刚举例了。好了啊，同学们，这就是我们刚刚看到的一个。
啊，视频的一个讲解这个视频的话，它是讲的比较可以的，不错的，因为它是采用图形化的方式给大家。来理解啊PID是怎么样的一个控制，具体PID代表的是什么含义以及对p和。和I和d去调节会有一个怎样的实际的现象出来？大家下来的话也可以去搜索这篇。啊，这个B站上的一个视频都可以去看。好PID的讲解，今天就本次就先到这里啊，好的，谢谢大家。

各位小伙伴大家好，这里是远动力科技，欢迎大家来到这里进行学习，然后本产品的话，我们就要进入到对PID。啊，相关的一些代码进行分析解读，首先我们还是从我们的内函数里面进行啊，定位到内函数这里。然后内函数定位到了之后，然后我们再查找我们的PID点c文件PID点c文件啊，这一个。首先我们今天啊，先把这里面的几个函数给大家讲一下，这个函数的话是我们的PID控制器是根据PID的。啊，公式来的。PID的公式啊，它最终的输出就等于kp乘以误差，再加上我们的啊ki。对吧，积分积分是怎么来的？积分就是啊ki乘以它的一个误差，然后再每次累加。每一次大家的值都不一样，然后再加上我们的kd。乘以啊，乘以它的微分量，也就是两次误差的一个差差值。然后啊，这是我们的PID控制器，PID控制器的话，我们是定义了啊，一个啊，结构体指针。这里面包括了有几项内容，这是误差的存储，然后这是上一次误差的一个变量存储，然后这是我们的期望值存储。然后就是期望值，也就是我们的目标量，然后这个feedback啊，是我们的反馈量，也就是参考量啊KPI KPI d，这是我们的三个参数。然后integral，这是我们的积分参数，然后这一个带了max的后缀，这是我们最大值的积分，它肯定是有限幅的，这是我们最大的限制。然后包括输出，然后输出也是对它进行了限浮，这些变量全部都是用解课题的方式来进行存储的，然后在这里定义了一个啊指针对吧？指针的话，第一个首先我们需要保存，我们的一个误差差值，然后将本次的误差赋值给上一次的误差。对吧，然后哦，这一个的话啊，需要调换一下位置哈。因为首先我们需要把差值。嗯。差值的话是啊，期望值减去我们的啊，参考值也就是反馈值，反馈值的话是通过我们传感器读取了一些数据，然后这个expect就是我们期望值，期望值就是设定的一个目标值。然后最终得到误差，值得到了这个误差值之后，然后再去嗯，这个我们先不看啊，这是向上一次的误差赋值。然后嗯，这个的话是我们的积分，每加的话就是求积分，然后积分的一个参数ki。啊乘以我们的误差，然后把每次的误差进行累加起来，因为这是加等于，所以说它是对每次的一个啊ki乘以误差进行了。累加，然后积分的一个先浮积分量，这是累加出来的积分量啊，大于等于这个积分量，对吧？大于或者是小于，它的一个负值，如果在这个范围之外的话啊，就取它的一个最大值就可以了，这是经过了线幅。然后PID啊，这个嗯，输出输出就最开始就讲过啊，通过我们的pi。好kp乘以误差，然后再加上我们的积分量，然后后面的是微分量输出，微分量的话是kd。乘以两次误差的一个差值，那这两次误差之后是嗯，这个值这个的话是有点靠前了，如果说一进来就把这个上一次的误差赋值了。那它这个kd基本上就不会起作用了，所以在这里需要改变一个位置，它就是需要将这个。啊kd值。这两个误差的一个赋值改在最后面来。这样的话啊，只有把这一次的误差减去上一次的误差，然后这一次的误差已经使用了，对吧？然后再去赋值给上一次的误差，这样的话，两次的误差才不会相反。然后输出的话，它也进行了一个限浮啊out max，然后最终反馈出我们的一个啊out PID空气的输出。为什么我们这里要设计为它是一个函数，封装为一个函函数啊，因为在调用PID的时候啊，无论是有啊，一级PID或者是多级PID的时候有多。多个控制器的时候，我们就只需要去调用这一个控制器，这个函数如果大家要分开写的话，每一个它都会申请一个kp，然后每一个会申请一个ki。它的一个变量存储，那就申请的变量就比较多，比较麻烦，看起来也没有可读性，也不是特别高，所以我们在这里的话就完全去啊，统一进行了一个PID。控制器内部的一个公式啊，相当于是满足它公式的一个PID控制器的运算。然后再往下看。嗯，这是我们的积分项的一个清零，清零的话就相当于积分项就给它清零就可以了，赋值为零，然后往上看一下。这是我们的PID参数。的一个赋值PID参数k pki kp对吧？然后积分项的最大值，输出的最大值参数的一个来源就是在最上面了。这上面三行五列的一个参数，然后每一行的话啊，对应的这里第一列kp值，第二列是我们的ki。第三列的话就是k比一。然后第四列的话就是积分的一个最大限幅啊，最后一列就是嗯PID输出的一个最大限幅。然后这一个啊，初始化初始化的话，就是把我们的这些参数啊，每一每一级每一个控制器，它所对应的PID参数。全部给它复制到对应的控制器里面来，这个控制器的话，全部都是以结构体的方式进行。呃，生生明的。一个结构体里面就包括了一一一整套的一个控制器哈。然后关于PID的代码的一个讲解啊，这是我们的啊，相当于是把我们的公式啊，用代码的一个形式进行实现。啊，本章节的话就先讲到这里，谢谢大家。

各位小伙伴，大家好，欢迎来到联通科技经济学系，然后本章节的话，我们讲解啊本套。啊，代码的控制器相关的一些代码进行解读，然后首先定位在我们的main main函数里面，然后从main函数里面进入到我们的。解谈。然后进入到这一个freer to s啊edit啊，进入到里面，然后再进入到我们的最主要的那一个线程。这个任务。神色生活task那进入到这里之后，那这就是我们的控制器控制器啊，
这种采用三环的控制器啊，这是控制器的一个输出配置。那首先点进来看一下三环的话，我们最外环是我们的速度环，这个速度环的话是由我们的。嗯，电机尾部编码器采集的一个速度，这是我们的最外环，然后中间环啊，第二环也就是我们的。啊，角度控制器角度控制器的话，主要是控制我们的姿态，然后最内环的话就是我们的角速度控制器角速度，它的一个参考值。
它的一个嗯，反馈。参考量是我们的角速度，然后角度控制器的话就是我们的角度作为参考值。然后首先定位在我们的嗯，速度控制器最外环。这是我们的控制器，很简单，对吧？因为我们使用到了嗯PID控制器这一个嗯，集成的一个函数，相当于是我们把PID控制器写在了一个功能函数里面，直接调用就可以了。很简单，方便那代码阅读起来也是很容易理解的。
我们只需要去改变它的一个啊，期望值和它的一个反馈变量，期望值啊，这是最外环最外环啊，因为我们是。嗯，动量轮对吧？动量轮轮胎保持平衡，所以说它的一个理论状态就是期望值啊，让它为零，就这个动量轮保持不动，它的速度为零。就处于一个平安的状态，对吧？然后它的参考值自然而然肯定就是它的一个速度了，
编码器获得的一个速度，然后接下来就进入到啊这个PID运算当中PID运算，这是我们的PID。然后我们可以进来啊，可以点进去看一下啊，这里创建了三个PID控制器，也是刚刚我们讲的啊，有啊INC order就是我们的编码器速度环，然后外环姿态的。姿态只是说它相对于的外环是在我们的角速度的一个基础上，它是我们角速度一个外环，最外环是我们的编码器，速度还好。这是三个环，然后它的参数啊，
我们点进来看一下，这是我们上面讲之前讲的啊PID控制器的一个理论运算公式。然后它的参数是在哪呢？我们再搜索一下啊，这个PID参数。那这个INC order这个环节。也就是我们的这一行，对吧？因为它是我们的第二行呃，第零第一行对吧？这是第零行，这是第一行。对吧，这里为一为一的话哦，我们要再往一个函数，
一个函数的去套哈，这个的话套过来就相对于我们的这个一。没火，这一个标号就唯一唯一的话，它就是我们的啊，第一个这个唯一后面零一个35对吧？横坐标为一，也就是第一行这一行啊，这是第零行，然后零零就代表第零列对吧？第零列就代表这个值这个值对应到负值上面的kd。啊ki就相当于是啊，这一列零点零零零二对吧？以此类推，这是我们初始化的一个参数，
包括其他的控制器也是一样哈，这里我们只举一个例子。然后再返回到我们的刚刚那个地方控制器，这是外环控制器啊，速度环，然后内环的中间环角度角度控制器的话，同样它只需要控制我们的。期望值，然后我们的反馈值反馈参考值对吧？期望值的话，因为我们在这里是嗯，又使用了三级的一个串行PID控制器。所以嗯，它中间环的一个输入就是上一环的一个输出就是我们啊，这个encoder这一块儿的一个输出对吧？
out encoder out就是它的一个PID控制器输出。作为我们的expect，就是我们的输入期望值了，所以它是一环扣一环的，这个大家如果不理解的话，就需要去多看一下相关的一些理论知识。和呃在大家可以在那个B站上面去多多搜索一下PID控制器的一些相关教程啊，或者是有以动画形式的去学习一下。这样加深一下对PID理论的一个理解，然后啊，接下来看一下这个是它的啊，角度控制器的反馈量。啊，会量自然而然肯定就是角度了不弱，对吧？
然后这是经过PID控制器。我们调用了这个函数，就相当于只要这个函数执行完了之后，它就像经过了我们的PID运算，然后再看我们的内环。那一环呢？就是我们的角速度gyro control，然后它的一个期望输出，同样是我们三维环的一个速度。和上一环的一个输出。这个的输入期望输入就是我们上一环的啊，控制器输出安卓的一个out对吧？环环相扣就是这么一个道理。然后反馈值的话就是我们的角速度，它是以度为每秒为单位的一个速度哈角速度，
然后第三个代码，第三行的话就是。啊，经过我们的tid控制器进行啊控制之后，然后最终我们要使用到的就是我们的啊，最内环的输出。因为对内环的输出是经过了三个环速度环，然后角度环角速度环三个环，彼此的一个串系啊，才综合得到我们的一个。啊，最内网的一个PID控制器输出，然后再将这个输出啊执行到我们的p返回m动力输出上，给我们的电机飞软电机进行使用，这个时候就能去调节它的一个平衡。
然后再反过来看一下这三个环，这是外环的一个速度，中间环的角度，最内环的一个角速度，对吧？环环相扣。然后本章节的话就先讲到这里啊，把三个主要的控制器给大家讲讲解了一遍，把它的一个代码给梳理了一下。然后本这里的话啊，时间也差不多了啊，也讲了八九分钟了啊，谢谢大家观看。

FLASH读写操作代码解读
1.FLASH读写操作涉及陀螺仪名片校准。
2.写入函数flash_one_three_flood_data用于写入三个float型数据。
3.写入地址为特定地址加36，具体地址为0800后接四个零。
4.FLASH容量为64k，内存容量为24k。
5.写入校准数据到FLASH的地址为40k起始地址加36。
03:30
写入FLASH的流程与地址计算
1.写入函数参数包括地址、数据指针和数据长度。
2.首先判断地址是否合法，包括基地址判断和页数限制。
3.解锁FLASH写入器，进行解锁操作。
4.计算实际偏移地址和页地址。
5.配置擦除和写入类型，以页为单位进行擦除和写入。
06:25
FLASH读写操作细节
1.写入操作前需对目标页进行擦除。
2.写入时循环处理数据，确保每个字都正确写入。
3.写入后锁定FLASH写入器，保护数据。
4.读取操作直接指向地址读取数据，根据需要读取指定长度的数据。